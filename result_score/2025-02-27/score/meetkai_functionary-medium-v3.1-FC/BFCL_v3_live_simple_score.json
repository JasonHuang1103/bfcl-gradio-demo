{"accuracy": 0.8178294573643411, "correct_count": 211, "total_count": 258}
{"id": "live_simple_10-3-6", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'location': 'Yosemite National Park, CA'. Expected one of ['Mariposa, CA']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_10-3-6", "question": [[{"role": "user", "content": "Could you tell me the current weather in Yosemite National Park which locates at Mariposa, CA, and make sure to give me the temperature in Celsius?"}]], "function": [{"name": "get_current_weather", "description": "Retrieves the current weather conditions for a specified city and state. If using state, then use short form like CA.", "parameters": {"type": "dict", "required": ["location"], "properties": {"location": {"type": "string", "description": "The location for which to get the weather, in the format of 'City, State (abbr)' or 'Location, State', such as 'San Francisco, CA' if State exists. 'City, Country' if State for the city doesn't exist. "}, "unit": {"type": "string", "description": "The unit of temperature for the weather report.", "enum": ["celsius", "fahrenheit"], "default": "fahrenheit"}}}}]}, "model_result_raw": [{"get_current_weather": "{\"location\": \"Yosemite National Park, CA\", \"unit\": \"celsius\"}"}], "model_result_decoded": [{"get_current_weather": {"location": "Yosemite National Park, CA", "unit": "celsius"}}], "possible_answer": [{"get_current_weather": {"location": ["Mariposa, CA"], "unit": ["celsius"]}}]}
{"id": "live_simple_26-6-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'loc': '123 \u0110\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc, Berkeley, CA 94704'. Expected one of ['123 \u0110\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc, Berkeley, CA', '123 University Street, Berkeley, CA']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_26-6-0", "question": [[{"role": "user", "content": "T\u00f4i c\u1ea7n m\u1ed9t chuy\u1ebfn Uber lo\u1ea1i 'Plus' t\u1eeb \u0111\u1ecba ch\u1ec9 123 \u0110\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc, Berkeley, CA 94704 v\u00e0 t\u00f4i kh\u00f4ng mu\u1ed1n ch\u1edd qu\u00e1 10 ph\u00fat."}]], "function": [{"name": "uber.ride", "description": "T\u00ecm chuy\u1ebfn \u0111i ph\u00f9 h\u1ee3p cho kh\u00e1ch h\u00e0ng d\u1ef1a tr\u00ean v\u1ecb tr\u00ed, lo\u1ea1i chuy\u1ebfn \u0111i v\u00e0 kho\u1ea3ng th\u1eddi gian kh\u00e1ch h\u00e0ng s\u1eb5n s\u00e0ng ch\u1edd \u0111\u1ee3i l\u00e0m th\u00f4ng s\u1ed1'", "parameters": {"type": "dict", "required": ["loc", "type", "time"], "properties": {"loc": {"type": "string", "description": "The starting location of the Uber ride in the format of 'Address, City, State'. For example, '123 Main St, Springfield, IL'."}, "type": {"type": "string", "description": "The type of Uber ride the user is requesting.", "enum": ["plus", "comfort", "black"]}, "time": {"type": "integer", "description": "The maximum amount of time the customer is willing to wait for the ride, in minutes."}}}}]}, "model_result_raw": [{"uber_ride": "{\"loc\": \"123 \u0110\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc, Berkeley, CA 94704\", \"type\": \"plus\", \"time\": 10}"}], "model_result_decoded": [{"uber_ride": {"loc": "123 \u0110\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc, Berkeley, CA 94704", "type": "plus", "time": 10}}], "possible_answer": [{"uber.ride": {"loc": ["123 \u0110\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc, Berkeley, CA", "123 University Street, Berkeley, CA"], "type": ["plus"], "time": [10]}}]}
{"id": "live_simple_29-7-2", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. 'str' object has no attribute 'keys'"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "live_simple_29-7-2", "question": [[{"role": "user", "content": "I want to go to McDonald's and buy a pizza."}]], "function": [{"name": "uber.eat.order", "description": "Place an order for food delivery on Uber Eats by specifying the restaurant and the items with their respective quantities.", "parameters": {"type": "dict", "required": ["restaurant", "items", "quantities"], "properties": {"restaurant": {"type": "string", "description": "The name of the restaurant from which to order food."}, "items": {"type": "array", "items": {"type": "string"}, "description": "A list of food item names selected for the order."}, "quantities": {"type": "array", "items": {"type": "integer"}, "description": "A list of quantities for each food item, corresponding by index to the items array."}}}}]}, "model_result_raw": "I'm sorry, but McDonald's does not serve pizza. They are known for their burgers, fries, and other fast food items. If you're looking for pizza, you might want to consider a different restaurant like Domino's, Pizza Hut, or a local pizzeria. Would you like me to help you order from one of these places instead?", "possible_answer": [{"uber.eat.order": {"restaurant": ["McDonald's"], "items": [["pizza"]], "quantities": [[1]]}}]}
{"id": "live_simple_38-15-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'location': 'Yosemite National Park, CA'. Expected one of ['Mariposa, CA']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_38-15-0", "question": [[{"role": "user", "content": "Provide the current weather information for Yosemite National Park at Mariposa, CA, using the coordinates 37.8651 N, 119.5383 W, and tell me the temperature, wind speed, and precipitation? I would like the temperature in Fahrenheit."}]], "function": [{"name": "get_current_weather", "description": "Retrieves the current weather information for a specified location using the Open-Meteo API. If using state, then use short form like CA.", "parameters": {"type": "dict", "required": ["location"], "properties": {"url": {"type": "string", "description": "The API endpoint for fetching weather data, with a default value pointing to the Open-Meteo API service.", "default": "https://api.open-meteo.com/v1/forecast"}, "location": {"type": "string", "description": "The geographical location for which to retrieve weather data, in the format of 'City, State (abbr)' or 'Location, State (abbr)', such as 'San Francisco, CA'."}, "unit": {"type": "string", "description": "The unit of measurement for temperature values.", "enum": ["celsius", "fahrenheit"], "default": "celsius"}}}}]}, "model_result_raw": [{"get_current_weather": "{\"location\": \"Yosemite National Park, CA\", \"unit\": \"fahrenheit\"}"}], "model_result_decoded": [{"get_current_weather": {"location": "Yosemite National Park, CA", "unit": "fahrenheit"}}], "possible_answer": [{"get_current_weather": {"url": ["", "https://api.open-meteo.com/v1/forecast"], "location": ["Mariposa, CA"], "unit": ["fahrenheit"]}}]}
{"id": "live_simple_40-17-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Missing dict key parameter: 'airCleanOperationMode'."], "error_type": "value_error:dict_key", "prompt": {"id": "live_simple_40-17-0", "question": [[{"role": "user", "content": "I'd like to start the air purifying function in my living room, please set the air conditioner to 'AIR_CLEAN' mode with strongest wind strength, with monitoring."}]], "function": [{"name": "ThinQ_Connect", "description": "Send a command to control an LG ThinQ appliance, such as an air conditioner, by setting various operation modes and target settings.", "parameters": {"type": "dict", "required": ["body"], "properties": {"body": {"type": "dict", "description": "A dictionary containing the settings and modes to control the LG ThinQ appliance.", "properties": {"airConJobMode": {"type": "string", "description": "The current job mode of the air conditioner.", "enum": ["AIR_CLEAN", "COOL", "AIR_DRY"], "default": "COOL"}, "windStrength": {"type": "string", "description": "The strength of the air flow.", "enum": ["LOW", "HIGH", "MID"], "default": "MID"}, "monitoringEnabled": {"type": "boolean", "description": "Flag to enable or disable air quality monitoring.", "default": false}, "airCleanOperationMode": {"type": "string", "description": "The operation mode for air cleaning.", "enum": ["POWER_ON", "POWER_OFF"], "default": "POWER_OFF"}, "powerSaveEnabled": {"type": "boolean", "description": "Flag to enable or disable power-saving mode.", "default": false}, "coolTargetTemperature": {"type": "integer", "description": "The target temperature for cooling in degrees Celsius. Valid values range from 18 to 30.", "default": 24}, "targetTemperature": {"type": "integer", "description": "The general target temperature in degrees Celsius. Valid values range from 18 to 30.", "default": 22}}}}}}]}, "model_result_raw": [{"ThinQ_Connect": "{\"body\": {\"airConJobMode\": \"AIR_CLEAN\", \"windStrength\": \"HIGH\", \"monitoringEnabled\": true}}"}], "model_result_decoded": [{"ThinQ_Connect": {"body": {"airConJobMode": "AIR_CLEAN", "windStrength": "HIGH", "monitoringEnabled": true}}}], "possible_answer": [{"ThinQ_Connect": {"body": [{"airConJobMode": ["AIR_CLEAN"], "windStrength": ["HIGH"], "monitoringEnabled": [true], "airCleanOperationMode": ["POWER_ON"], "powerSaveEnabled": ["", false], "coolTargetTemperature": ["", 24], "targetTemperature": ["", 22]}]}}]}
{"id": "live_simple_42-17-2", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'airConJobMode': 'AIR_DRY'. Expected one of ['', 'cool'].", "Missing dict key parameter: 'coolTargetTemperature'."], "error_type": "value_error:dict_key", "prompt": {"id": "live_simple_42-17-2", "question": [[{"role": "user", "content": "\uc9d1\uc5d0 \uc788\ub294 LG ThinQ \uc5d0\uc5b4\ucee8\uc744 \uc81c\uc2b5 \ubaa8\ub4dc\ub85c \uc124\uc815\ud558\uace0 \uc2f6\uc5b4\uc694. \ubc14\ub78c \uc138\uae30\ub294 \uc911\uac04\uc73c\ub85c \ud558\uace0, \ubaa9\ud45c \uc628\ub3c4\ub294 22\ub3c4\ub85c \uc124\uc815\ud574 \uc8fc\uc138\uc694."}]], "function": [{"name": "ThinQ_Connect", "description": "Send a command to control an LG ThinQ appliance, such as an air conditioner, by setting various operation modes and target settings.", "parameters": {"type": "dict", "required": ["body"], "properties": {"body": {"type": "dict", "description": "A dictionary containing the settings and modes to control the LG ThinQ appliance.", "properties": {"airConJobMode": {"type": "string", "description": "The current job mode of the air conditioner.", "enum": ["AIR_CLEAN", "COOL", "AIR_DRY"], "default": "COOL"}, "windStrength": {"type": "string", "description": "The strength of the air flow.", "enum": ["LOW", "HIGH", "MID"], "default": "MID"}, "monitoringEnabled": {"type": "boolean", "description": "Flag to enable or disable air quality monitoring.", "default": false}, "airCleanOperationMode": {"type": "string", "description": "The operation mode for air cleaning.", "enum": ["POWER_ON", "POWER_OFF"], "default": "POWER_OFF"}, "powerSaveEnabled": {"type": "boolean", "description": "Flag to enable or disable power-saving mode.", "default": false}, "coolTargetTemperature": {"type": "integer", "description": "The target temperature for cooling in degrees Celsius. Valid values range from 18 to 30.", "default": 24}, "targetTemperature": {"type": "integer", "description": "The general target temperature in degrees Celsius. Valid values range from 18 to 30.", "default": 22}}}}}}]}, "model_result_raw": [{"ThinQ_Connect": "{\"body\": {\"airConJobMode\": \"AIR_DRY\", \"windStrength\": \"MID\", \"targetTemperature\": 22}}"}], "model_result_decoded": [{"ThinQ_Connect": {"body": {"airConJobMode": "AIR_DRY", "windStrength": "MID", "targetTemperature": 22}}}], "possible_answer": [{"ThinQ_Connect": {"body": [{"airConJobMode": ["", "COOL"], "windStrength": ["", "MID"], "monitoringEnabled": ["", false], "airCleanOperationMode": ["POWER_OFF", ""], "powerSaveEnabled": ["", false], "coolTargetTemperature": [22], "targetTemperature": ["", 22]}]}}]}
{"id": "live_simple_45-18-1", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Missing dict key parameter: 'airConOperationMode'."], "error_type": "value_error:dict_key", "prompt": {"id": "live_simple_45-18-1", "question": [[{"role": "user", "content": "It's sooo hot. set the air conditioner to 'COOL' mode, temp to 20 degrees oC, while air cleaning on?"}]], "function": [{"name": "ThinQ_Connect", "description": "Send a command to control an appliance, such as setting operation modes, air flow strength, and target temperatures.", "parameters": {"type": "dict", "required": ["body"], "properties": {"body": {"type": "dict", "description": "A dictionary containing various control parameters for the appliance.", "properties": {"currentJobMode": {"type": "string", "description": "The current mode of operation for the air conditioner.", "enum": ["AIR_CLEAN", "COOL", "AIR_DRY"], "default": "COOL"}, "windStrength": {"type": "string", "description": "The strength level of the airflow.", "enum": ["LOW", "HIGH", "MID"], "default": "MID"}, "monitoringEnabled": {"type": "boolean", "description": "Flag to enable or disable air quality sensor monitoring.", "default": false}, "airCleanOperationMode": {"type": "string", "description": "The operation mode for the air cleaning process.", "enum": ["START", "STOP"], "default": "STOP"}, "airConOperationMode": {"type": "string", "description": "The operation mode for turning the air conditioner on or off.", "enum": ["POWER_ON", "POWER_OFF"], "default": "POWER_OFF"}, "powerSaveEnabled": {"type": "boolean", "description": "Flag to enable or disable power-saving mode.", "default": false}, "coolTargetTemperature": {"type": "integer", "description": "The target temperature for cooling mode in degrees Celsius. Value must be between 18 and 30.", "default": 24}, "targetTemperature": {"type": "integer", "description": "The general target temperature in degrees Celsius. Value must be between 18 and 30.", "default": 22}}}}}}]}, "model_result_raw": [{"ThinQ_Connect": "{\"body\": {\"currentJobMode\": \"COOL\", \"coolTargetTemperature\": 20, \"airCleanOperationMode\": \"START\"}}"}], "model_result_decoded": [{"ThinQ_Connect": {"body": {"currentJobMode": "COOL", "coolTargetTemperature": 20, "airCleanOperationMode": "START"}}}], "possible_answer": [{"ThinQ_Connect": {"body": [{"currentJobMode": ["", "COOL"], "windStrength": ["", "MID"], "monitoringEnabled": ["", false], "airCleanOperationMode": ["START"], "airConOperationMode": ["POWER_ON"], "powerSaveEnabled": ["", false], "coolTargetTemperature": [20], "targetTemperature": ["", 22]}]}}]}
{"id": "live_simple_46-19-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Missing required parameter: 'airConOperationMode'."], "error_type": "simple_function_checker:missing_required", "prompt": {"id": "live_simple_46-19-0", "question": [[{"role": "user", "content": "I've noticed that the current job mode of the air conditioner is set to clean, but I'd like to change it to cool mod, set the wind strength to medium, with quality monitoring. Now, start air cleaning, disable the power-saving mode, and adjust the temperature to 24 Celsius?"}]], "function": [{"name": "ThinQ_Connect", "description": "Sends a command to control an appliance, allowing the adjustment of various settings such as job modes, airflow, and temperature.", "parameters": {"type": "dict", "required": ["airConJobMode", "windStrength", "monitoringEnabled", "airCleanOperationMode", "airConOperationMode", "powerSaveEnabled", "targetTemperature"], "properties": {"airConJobMode": {"type": "string", "description": "The current job mode of the air conditioner.", "enum": ["AIR_CLEAN", "COOL", "AIR_DRY"]}, "windStrength": {"type": "string", "description": "The strength of the air flow.", "enum": ["LOW", "HIGH", "MID"]}, "monitoringEnabled": {"type": "boolean", "description": "A flag to enable or disable air quality sensor monitoring."}, "airCleanOperationMode": {"type": "string", "description": "The operation mode for the air cleaning process.", "enum": ["START", "STOP"]}, "airConOperationMode": {"type": "string", "description": "The operation mode of the air conditioner itself.", "enum": ["POWER_ON", "POWER_OFF"]}, "powerSaveEnabled": {"type": "boolean", "description": "A flag to enable or disable power-saving mode."}, "targetTemperature": {"type": "integer", "description": "The target temperature to set for the air conditioner, in degrees Celsius."}}}}]}, "model_result_raw": [{"ThinQ_Connect": "{\"airConJobMode\": \"COOL\", \"windStrength\": \"MID\", \"monitoringEnabled\": true, \"airCleanOperationMode\": \"START\", \"powerSaveEnabled\": false, \"targetTemperature\": 24}"}], "model_result_decoded": [{"ThinQ_Connect": {"airConJobMode": "COOL", "windStrength": "MID", "monitoringEnabled": true, "airCleanOperationMode": "START", "powerSaveEnabled": false, "targetTemperature": 24}}], "possible_answer": [{"ThinQ_Connect": {"airConJobMode": ["COOL"], "windStrength": ["MID"], "monitoringEnabled": [true], "airCleanOperationMode": ["START"], "airConOperationMode": ["POWER_ON"], "powerSaveEnabled": [false], "targetTemperature": [24]}}]}
{"id": "live_simple_49-21-1", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'taste': 'bitter'. Expected one of ['slightly bitter']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_49-21-1", "question": [[{"role": "user", "content": "Do you have any porters in stock? with a rich, chocolatey aroma and a slightly bitter taste. It should be dark in color, preferably from Creek brewery. All other preferences are the standard ones. Any recommendations?"}]], "function": [{"name": "find_beer", "description": "Recommend a beer based on specified attributes such as brewery, taste, aroma, color, style, and more.", "parameters": {"type": "dict", "required": ["brewery", "taste", "aroma", "color", "style"], "properties": {"brewery": {"type": "string", "description": "The brewery name to find similar beers."}, "taste": {"type": "string", "description": "The desired taste profile in the beer, such as 'bitter', 'sweet', 'sour'."}, "aroma": {"type": "string", "description": "The desired aroma profile in the beer, such as 'fruity', 'hoppy', 'malty'."}, "color": {"type": "string", "description": "The desired color of the beer, such as 'pale', 'amber', 'dark'."}, "style": {"type": "string", "description": "The style of beer being searched for, such as 'IPA', 'stout', 'lager'."}, "abv_min": {"type": "float", "description": "The minimum alcohol by volume (ABV) percentage, typically a value under 12.5%.", "default": 0.0}, "abv_max": {"type": "float", "description": "The maximum alcohol by volume (ABV) percentage, a value logically above 0%.", "default": 12.5}, "ibu_min": {"type": "integer", "description": "The minimum International Bitterness Units (IBU) score, typically a value under 120.", "default": 0}, "ibu_max": {"type": "integer", "description": "The maximum International Bitterness Units (IBU) score, logically above 0.", "default": 120}, "pairings": {"type": "array", "items": {"type": "string"}, "description": "A list of food items to pair with the beer, such as 'burger', 'cheese', 'chocolate'.", "default": []}}}}]}, "model_result_raw": [{"find_beer": "{\"brewery\": \"Creek\", \"taste\": \"bitter\", \"aroma\": \"chocolatey\", \"color\": \"dark\", \"style\": \"porter\", \"abv_min\": 0.0, \"abv_max\": 12.5, \"ibu_min\": 0, \"ibu_max\": 120, \"pairings\": []}"}], "model_result_decoded": [{"find_beer": {"brewery": "Creek", "taste": "bitter", "aroma": "chocolatey", "color": "dark", "style": "porter", "abv_min": 0.0, "abv_max": 12.5, "ibu_min": 0, "ibu_max": 120, "pairings": []}}], "possible_answer": [{"find_beer": {"brewery": ["Creek", "Creek brewery", "Creek Brewery", "Brewery Creek", "brewery creek"], "taste": ["slightly bitter"], "aroma": ["chocolatey"], "color": ["dark"], "style": ["porter"], "abv_min": ["", 0.0], "abv_max": ["", 12.5], "ibu_min": ["", 0], "ibu_max": ["", 120], "pairings": ["", []]}}]}
{"id": "live_simple_51-23-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Missing dict key parameter: 'airConOperationMode'."], "error_type": "value_error:dict_key", "prompt": {"id": "live_simple_51-23-0", "question": [[{"role": "user", "content": "Change the settings of my air conditioner. Set it to cool mode with a target temperature of 22 degrees Celsius. Enable the power save mode and set the high wind strength. Start in 1 hour and 30 minutes from now? For everything else"}]], "function": [{"name": "ThinQ_Connect", "description": "Sends a command to control an appliance, allowing only a single value to be sent in one call.", "parameters": {"type": "dict", "required": ["body"], "properties": {"body": {"type": "dict", "description": "A dictionary containing the parameters for the appliance command.", "properties": {"airConJobMode": {"type": "string", "description": "The current job mode of the air conditioner.", "enum": ["AIR_CLEAN", "COOL", "AIR_DRY"], "default": "COOL"}, "windStrength": {"type": "string", "description": "The strength of the air flow.", "enum": ["LOW", "HIGH", "MID"], "default": "MID"}, "monitoringEnabled": {"type": "boolean", "description": "Whether air quality sensor monitoring is enabled.", "default": false}, "airCleanOperationMode": {"type": "string", "description": "The operation mode for the air cleaning function.", "enum": ["START", "STOP"], "default": "STOP"}, "airConOperationMode": {"type": "string", "description": "The operation mode for the air conditioner, indicating if it is turned on or off.", "enum": ["POWER_ON", "POWER_OFF"], "default": "POWER_OFF"}, "powerSaveEnabled": {"type": "boolean", "description": "Whether power save mode is enabled to conserve energy.", "default": false}, "targetTemperature": {"type": "integer", "description": "The target temperature to set for the appliance, in degrees Celsius.", "default": 20}, "relativeHourToStop": {"type": "integer", "description": "The number of hours from the current time when the appliance should stop. If set to null, the appliance will not be scheduled to stop.", "default": null}, "relativeMinuteToStop": {"type": "integer", "description": "The number of minutes from the current time when the appliance should stop. If set to null, the appliance will not be scheduled to stop.", "default": null}, "relativeHourToStart": {"type": "integer", "description": "The number of hours from the current time when the appliance should start. If set to null, the appliance will not be scheduled to start.", "default": null}, "relativeMinuteToStart": {"type": "integer", "description": "The number of minutes from the current time when the appliance should start. If set to null, the appliance will not be scheduled to start.", "default": null}}}}}}]}, "model_result_raw": [{"ThinQ_Connect": "{\"body\": {\"airConJobMode\": \"COOL\", \"targetTemperature\": 22, \"powerSaveEnabled\": true, \"windStrength\": \"HIGH\", \"relativeHourToStart\": 1, \"relativeMinuteToStart\": 30}}"}], "model_result_decoded": [{"ThinQ_Connect": {"body": {"airConJobMode": "COOL", "targetTemperature": 22, "powerSaveEnabled": true, "windStrength": "HIGH", "relativeHourToStart": 1, "relativeMinuteToStart": 30}}}], "possible_answer": [{"ThinQ_Connect": {"body": [{"airConJobMode": ["COOL"], "windStrength": ["HIGH"], "airConOperationMode": ["POWER_ON"], "powerSaveEnabled": [true], "targetTemperature": [22], "relativeHourToStart": [1], "relativeMinuteToStart": [30]}]}}]}
{"id": "live_simple_59-28-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'movie_date': '2023-04-14'. Expected one of ['', None]."], "error_type": "value_error:others", "prompt": {"id": "live_simple_59-28-0", "question": [[{"role": "system", "content": "\nYou are an AI chatbot who helps users in providing information related to movies, cinema halls and booking movie tickets for them.  \nAs a system bot, consider / calculate / default the movie date to current date (today's date) in India. \n"}, {"role": "user", "content": "What movies are playing today in Mumbai?"}]], "function": [{"name": "get_movies", "description": "Retrieve a list of movies playing in a specified city, optionally filtered by cinema hall, date, language, and format.", "parameters": {"type": "dict", "required": ["city"], "properties": {"city": {"type": "string", "description": "The city where the movies are being searched for, such as 'Los Angeles', 'New York'."}, "cinema_hall": {"type": "string", "description": "The name of the cinema hall to filter the movies by. Optional parameter.", "default": null}, "movie_date": {"type": "string", "description": "The date when the movies are playing, in the format 'YYYY-MM-DD'. Optional parameter. Default is the current date.", "default": null}, "movie_language": {"type": "string", "description": "The language of the movies to filter by, such as 'English' or 'Spanish'. Optional parameter.", "default": null}, "movie_format": {"type": "string", "description": "The format of the movie, such as '2D', '3D', 'IMAX'. Optional parameter.", "enum": ["2D", "3D", "IMAX"], "default": "2D"}}}}]}, "model_result_raw": [{"get_movies": "{\"city\": \"Mumbai\", \"movie_date\": \"2023-04-14\"}"}], "model_result_decoded": [{"get_movies": {"city": "Mumbai", "movie_date": "2023-04-14"}}], "possible_answer": [{"get_movies": {"city": ["Mumbai"], "cinema_hall": ["", null], "movie_date": ["", null], "movie_language": ["", null], "movie_format": ["", "2D"]}}]}
{"id": "live_simple_66-30-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Wrong number of functions."], "error_type": "simple_function_checker:wrong_count", "prompt": {"id": "live_simple_66-30-0", "question": [[{"role": "system", "content": "The Requirement Extractor is designed to interpret and process multiple user queries in a single input, especially in the context of inventory management and product information."}, {"role": "user", "content": "I'm wondering inventory levels for item IDs 102 for size L and 103 for size M are below the minimum threshold of 20 units and let me know if they need to be restocked?"}]], "function": [{"name": "inventory.restock_check", "description": "Checks the inventory levels for specified items and determines if restocking is required based on minimum threshold levels.", "parameters": {"type": "dict", "required": ["item_ids", "threshold"], "properties": {"item_ids": {"type": "array", "items": {"type": "integer"}, "description": "A list of unique integer identifiers for items to check in the inventory."}, "threshold": {"type": "integer", "description": "The minimum inventory level before restocking is triggered."}, "include_discontinued": {"type": "boolean", "description": "Whether to include discontinued items in the restock check.", "default": false}}}}]}, "model_result_raw": [{"inventory_restock_check": "{\"item_ids\": [102], \"threshold\": 20}"}, {"inventory_restock_check": "{\"item_ids\": [103], \"threshold\": 20}"}], "model_result_decoded": [{"inventory_restock_check": {"item_ids": [102], "threshold": 20}}, {"inventory_restock_check": {"item_ids": [103], "threshold": 20}}], "possible_answer": [{"inventory.restock_check": {"item_ids": [[102, 103]], "threshold": [20], "include_discontinued": ["", false]}}]}
{"id": "live_simple_70-34-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Incorrect type for parameter 't1'. Expected type string, got NoneType. Parameter value: None."], "error_type": "type_error:simple", "prompt": {"id": "live_simple_70-34-0", "question": [[{"role": "user", "content": "Can you retrieve the list of today's alerts for the sensor with serial number Q3CC-CRT3-SZ2G, showing a maximum of 10 alerts per page?"}]], "function": [{"name": "get_sensor_alerts", "description": "Retrieves a paginated list of alerts generated by sensors within a specific time frame, optionally filtered by network IDs, sensor serial number, and trigger metric.", "parameters": {"type": "dict", "required": ["perPage"], "properties": {"perPage": {"type": "integer", "description": "The number of alert entries per page. Must be within the range of 3 to 100."}, "startingAfter": {"type": "string", "description": "A server-generated token representing the start of the page, typically a timestamp or an ID.", "default": null}, "endingBefore": {"type": "string", "description": "A server-generated token representing the end of the page, typically a timestamp or an ID.", "default": null}, "t0": {"type": "string", "description": "The start timestamp for the alert query in the format 'YYYY-MM-DD', up to 365 days from the current date. If not provided, defaults to the current date.", "default": null}, "t1": {"type": "string", "description": "The end timestamp for the alert query in the format 'YYYY-MM-DD', up to 365 days from the start timestamp (t0).", "default": null}, "networkId": {"type": "array", "items": {"type": "string"}, "description": "A list of network IDs to narrow down the alert query.", "default": []}, "timespan": {"type": "integer", "description": "The duration for the alert query in seconds, not to exceed 31,536,000 seconds (365 days).", "default": 86400}, "sensorSerial": {"type": "string", "description": "The specific sensor serial number to filter alerts.", "default": null}, "triggerMetric": {"type": "string", "description": "The metric that triggered the alert.", "enum": ["apparentPower", "co2", "current", "door", "frequency", "humidity", "indoorAirQuality", "noise", "pm25", "powerFactor", "realPower", "temperature", "tvoc", "upstreamPower", "voltage", "water"], "default": null}}}}]}, "model_result_raw": [{"get_sensor_alerts": "{\"perPage\": 10, \"sensorSerial\": \"Q3CC-CRT3-SZ2G\", \"t0\": null, \"t1\": null}"}], "model_result_decoded": [{"get_sensor_alerts": {"perPage": 10, "sensorSerial": "Q3CC-CRT3-SZ2G", "t0": null, "t1": null}}], "possible_answer": [{"get_sensor_alerts": {"perPage": [10], "startingAfter": ["", null], "endingBefore": ["", null], "t0": ["", null], "t1": [""], "networkId": ["", []], "timespan": [""], "sensorSerial": ["Q3CC-CRT3-SZ2G"], "triggerMetric": ["", null]}}]}
{"id": "live_simple_71-35-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'metrics': ['favorability', 'trust', 'usage frequency']. Expected one of [['view']]."], "error_type": "value_error:list/tuple", "prompt": {"id": "live_simple_71-35-0", "question": [[{"role": "user", "content": "How have millennials views of Apple changed since July 2022?'"}]], "function": [{"name": "extract_parameters_v1", "description": "Extracts parameters for generating a database query to answer a user's question, identifying demographics, target entities, metrics, country, and date range.", "parameters": {"type": "dict", "required": ["targets", "metrics"], "properties": {"demographics": {"type": "array", "items": {"type": "string"}, "description": "Array of strings indicating demographics, geographic, or psychographic characteristics, e.g., 'wealthy', 'women'. If no demographics inferred, return empty array.", "default": []}, "targets": {"type": "array", "items": {"type": "string"}, "description": "Array of target entities and types. Each entry is a string combining 'target' and 'target_type', such as 'brand:Nike' or 'country:USA'."}, "metrics": {"type": "array", "items": {"type": "string"}, "description": "Array of strings for attitudinal metrics about target entities, e.g., 'trust', 'usage frequency'.", "enum": ["favorability", "admired employer", "buzz", "community impact", "purchasing consideration", "trust", "usage frequency", "value", "promoter", "view"]}, "country": {"type": "string", "description": "Country related to the demographics of interest. If unspecified, default is null.", "default": null}, "min_date": {"type": "string", "description": "Start date of the date range in YYYY-MM-DD format. Default is null, representing no specific start date.", "default": null}, "max_date": {"type": "string", "description": "End date of the date range in YYYY-MM-DD format. Default is null, representing no specific end date.", "default": null}, "interval": {"type": "string", "description": "Aggregation interval for data reporting, e.g., 'daily', 'monthly'. If unspecified, default is null.", "enum": ["day", "week", "month", "quarter", "year"], "default": null}}}}]}, "model_result_raw": [{"extract_parameters_v1": "{\"demographics\": [\"millennials\"], \"targets\": [\"brand:Apple\"], \"metrics\": [\"favorability\", \"trust\", \"usage frequency\"], \"min_date\": \"2022-07-01\"}"}], "model_result_decoded": [{"extract_parameters_v1": {"demographics": ["millennials"], "targets": ["brand:Apple"], "metrics": ["favorability", "trust", "usage frequency"], "min_date": "2022-07-01"}}], "possible_answer": [{"extract_parameters_v1": {"demographics": [["millennials"]], "targets": [["brand:Apple"]], "metrics": [["view"]], "country": ["", null], "min_date": ["2022-07-01"], "max_date": ["", null], "interval": ["", null]}}]}
{"id": "live_simple_73-36-1", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. 'str' object has no attribute 'keys'"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "live_simple_73-36-1", "question": [[{"role": "user", "content": "Can you analyze this audio file to determine the timing of significant beats, using a capture percentage of 90 and a confidence window size of 0.25 seconds?"}]], "function": [{"name": "detect_beats_and_filter", "description": "Analyzes an audio file to detect beats and filters them based on confidence levels and timing. Returns a list of times in seconds, each representing the occurrence of a significant beat within the audio file.", "parameters": {"type": "dict", "required": ["capture_percentage", "confidence_window_size"], "properties": {"capture_percentage": {"type": "integer", "description": "Filters beats by excluding those below a specified confidence percentile. Values range from 0 to 100 (inclusive)."}, "confidence_window_size": {"type": "float", "description": "Selects the highest confidence beat within a given time window in seconds (e.g., 0.5), to ensure distinct beats are chosen in that period."}}}}]}, "model_result_raw": "Sure, I can help with that. However, I need the audio file to analyze. Could you please provide the audio file you'd like me to analyze?", "possible_answer": [{"detect_beats_and_filter": {"capture_percentage": [90], "confidence_window_size": [0.25]}}]}
{"id": "live_simple_80-41-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'Content': \"The field of artificial intelligence has seen significant advancements in recent years, particularly in the area of machine learning algorithms. These breakthroughs have enabled AI systems to learn from data more efficiently and make decisions with greater accuracy. One of the key developments is the use of deep learning techniques, which mimic the human brain's neural networks to process complex data. This has led to improvements in image and speech recognition, natural language processing, and predictive analytics. Furthermore, the integration of reinforcement learning has allowed AI systems to adapt and improve their performance over time, leading to applications in robotics and autonomous vehicles. These advancements have the potential to revolutionize various industries and transform the way we interact with technology.\". Expected one of ['The recent breakthroughs in machine learning algorithms.']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_80-41-0", "question": [[{"role": "user", "content": "I need to add a news item about the latest advancements in AI. The title should be 'Breakthrough in Artificial Intelligence', and the content must cover the recent breakthroughs in machine learning algorithms. Can you set the meta title as 'AI Breakthrough Latest Developments in Machine Learning' and the meta description to 'An overview of the recent significant advancements in artificial intelligence and machine learning technology'? Also, the URL should be 'ai-breakthrough-latest-developments'."}]], "function": [{"name": "sitefinity_create_contentitem", "description": "Create a new content item in Sitefinity CMS with specified metadata for SEO optimization and a unique URL name. Ensures that content is visible and well-represented in search engine results.", "parameters": {"type": "dict", "required": ["Title", "Content", "MetaTitle", "MetaDescription", "UrlName"], "properties": {"Title": {"type": "string", "description": "The title of the content item. It is displayed prominently on the page and used as the clickable link on search engine results pages."}, "Content": {"type": "string", "description": "The body content of the content item. Contains the main text of the content and can include HTML tags."}, "MetaTitle": {"type": "string", "description": "The HTML meta title for SEO. Should be concise and relevant to the content topic. If not provided, the 'Title' will be used."}, "MetaDescription": {"type": "string", "description": "The HTML meta description for SEO. Provides a brief summary of the content and its relevance. If not provided, a summary derived from the 'Content' will be used."}, "UrlName": {"type": "string", "description": "A human-readable and SEO-friendly URL slug for the content item. It is typically constructed using hyphens to separate words and should be unique."}}}}]}, "model_result_raw": [{"sitefinity_create_contentitem": "{\"Title\": \"Breakthrough in Artificial Intelligence\", \"Content\": \"The field of artificial intelligence has seen significant advancements in recent years, particularly in the area of machine learning algorithms. These breakthroughs have enabled AI systems to learn from data more efficiently and make decisions with greater accuracy. One of the key developments is the use of deep learning techniques, which mimic the human brain's neural networks to process complex data. This has led to improvements in image and speech recognition, natural language processing, and predictive analytics. Furthermore, the integration of reinforcement learning has allowed AI systems to adapt and improve their performance over time, leading to applications in robotics and autonomous vehicles. These advancements have the potential to revolutionize various industries and transform the way we interact with technology.\", \"MetaTitle\": \"AI Breakthrough Latest Developments in Machine Learning\", \"MetaDescription\": \"An overview of the recent significant advancements in artificial intelligence and machine learning technology\", \"UrlName\": \"ai-breakthrough-latest-developments\"}"}], "model_result_decoded": [{"sitefinity_create_contentitem": {"Title": "Breakthrough in Artificial Intelligence", "Content": "The field of artificial intelligence has seen significant advancements in recent years, particularly in the area of machine learning algorithms. These breakthroughs have enabled AI systems to learn from data more efficiently and make decisions with greater accuracy. One of the key developments is the use of deep learning techniques, which mimic the human brain's neural networks to process complex data. This has led to improvements in image and speech recognition, natural language processing, and predictive analytics. Furthermore, the integration of reinforcement learning has allowed AI systems to adapt and improve their performance over time, leading to applications in robotics and autonomous vehicles. These advancements have the potential to revolutionize various industries and transform the way we interact with technology.", "MetaTitle": "AI Breakthrough Latest Developments in Machine Learning", "MetaDescription": "An overview of the recent significant advancements in artificial intelligence and machine learning technology", "UrlName": "ai-breakthrough-latest-developments"}}], "possible_answer": [{"sitefinity_create_contentitem": {"Title": ["Breakthrough in Artificial Intelligence"], "Content": ["The recent breakthroughs in machine learning algorithms."], "MetaTitle": ["AI Breakthrough Latest Developments in Machine Learning"], "MetaDescription": ["An overview of the recent significant advancements in artificial intelligence and machine learning technology"], "UrlName": ["ai-breakthrough-latest-developments"]}}]}
{"id": "live_simple_97-57-1", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'unit': 'celsius'. Expected one of ['', 'fahrenheit']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_97-57-1", "question": [[{"role": "user", "content": "Could you tell me the current weather conditions in El Gastor, Andalusia?"}]], "function": [{"name": "get_current_weather", "description": "Retrieve the current weather conditions for a specified location. If using state, then use short form like CA.", "parameters": {"type": "dict", "required": ["location"], "properties": {"location": {"type": "string", "description": "The location for which to get the weather, in the format of 'City, State (abbr)' or 'City, Location', such as 'San Francisco, CA', or 'New York, NY'."}, "unit": {"type": "string", "description": "The temperature unit for the weather report.", "enum": ["celsius", "fahrenheit"], "default": "fahrenheit"}}}}]}, "model_result_raw": [{"get_current_weather": "{\"location\": \"El Gastor, Andalusia\", \"unit\": \"celsius\"}"}], "model_result_decoded": [{"get_current_weather": {"location": "El Gastor, Andalusia", "unit": "celsius"}}], "possible_answer": [{"get_current_weather": {"location": ["El Gastor, Andalusia"], "unit": ["", "fahrenheit"]}}]}
{"id": "live_simple_106-63-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Missing required parameter: 'auto_loan_payment_start'."], "error_type": "simple_function_checker:missing_required", "prompt": {"id": "live_simple_106-63-0", "question": [[{"role": "user", "content": "Could you help me classify the following customer queries into the appropriate categories?\n- 'Please provide the routing number for my account.'\n- 'Which account number should I use for setting up eStatements?'\n- 'What rewards are offered for my card?'\n- 'Looking for the closest ATM for cash withdrawal, can you assist me in finding one?'\n- 'What rewards are available on my card?'\n- 'Locate ATM for immediate cash needs'\n- 'I urgently need to find an ATM for cash withdrawal, can you help me locate the nearest one?'\n- 'Activate my new card for loyalty program enrollment'\n- 'I want to cancel my card and ensure the safety of my account.'\n- 'Searching for ATM for money withdrawal'\n- 'Can you walk me through the activation process for my new bank card?'\n- 'What are the benefits of using my rewards points for entertainment?'\n- 'Find ATM for urgent cash needs'\n- 'Need to find ATM for quick cash emergency'\n- 'I'm done here. Goodbye!'\n- 'Please give me the account number for my business checking account.'\n- 'Can I purchase a cashier's check through this chat service?'\n- 'Thanks for your assistance. Goodbye!'\n- 'I need a cashier's check, how can I get one?'\n- 'You're amazing. Goodbye!'"}]], "function": [{"name": "record", "description": "Logs the types of queries users make, classifying them into predefined categories.", "parameters": {"type": "dict", "required": ["acc_routing_start", "activate_card_start", "atm_finder_start", "auto_loan_payment_start", "bank_hours_start", "cancel_card_start", "card_rewards_start", "cashier_check_start", "clean_goodbye_start"], "properties": {"acc_routing_start": {"type": "array", "items": {"type": "string"}, "description": "List of queries requesting the bank routing numbers or account numbers."}, "activate_card_start": {"type": "array", "items": {"type": "string"}, "description": "List of queries related to activating a new bank card."}, "atm_finder_start": {"type": "array", "items": {"type": "string"}, "description": "List of queries asking for locations of ATMs nearby or in a specific area."}, "auto_loan_payment_start": {"type": "array", "items": {"type": "string"}, "description": "List of queries related to making payments on auto or car loans."}, "bank_hours_start": {"type": "array", "items": {"type": "string"}, "description": "List of queries asking for the working hours or locations of bank branches."}, "cancel_card_start": {"type": "array", "items": {"type": "string"}, "description": "List of queries related to cancelling a bank card or asking for guidance on how to cancel a card."}, "card_rewards_start": {"type": "array", "items": {"type": "string"}, "description": "List of queries related to rewards points or benefits associated with a bank card."}, "cashier_check_start": {"type": "array", "items": {"type": "string"}, "description": "List of requests for cashier's checks, drafts, or similar financial instruments from the bank."}, "clean_goodbye_start": {"type": "array", "items": {"type": "string"}, "description": "List of queries saying goodbye or ending the conversation with the chatbot."}}}}]}, "model_result_raw": [{"record": "{\"acc_routing_start\": [\"Please provide the routing number for my account.\", \"Which account number should I use for setting up eStatements?\", \"Please give me the account number for my business checking account.\"], \"card_rewards_start\": [\"What rewards are offered for my card?\", \"What rewards are available on my card?\", \"What are the benefits of using my rewards points for entertainment?\"], \"atm_finder_start\": [\"Looking for the closest ATM for cash withdrawal, can you assist me in finding one?\", \"Locate ATM for immediate cash needs\", \"I urgently need to find an ATM for cash withdrawal, can you help me locate the nearest one?\", \"Searching for ATM for money withdrawal\", \"Find ATM for urgent cash needs\", \"Need to find ATM for quick cash emergency\"], \"activate_card_start\": [\"Activate my new card for loyalty program enrollment\", \"Can you walk me through the activation process for my new bank card?\"], \"cancel_card_start\": [\"I want to cancel my card and ensure the safety of my account.\"], \"cashier_check_start\": [\"Can I purchase a cashier's check through this chat service?\", \"I need a cashier's check, how can I get one?\"], \"clean_goodbye_start\": [\"I'm done here. Goodbye!\", \"Thanks for your assistance. Goodbye!\", \"You're amazing. Goodbye!\"]}"}], "model_result_decoded": [{"record": {"acc_routing_start": ["Please provide the routing number for my account.", "Which account number should I use for setting up eStatements?", "Please give me the account number for my business checking account."], "card_rewards_start": ["What rewards are offered for my card?", "What rewards are available on my card?", "What are the benefits of using my rewards points for entertainment?"], "atm_finder_start": ["Looking for the closest ATM for cash withdrawal, can you assist me in finding one?", "Locate ATM for immediate cash needs", "I urgently need to find an ATM for cash withdrawal, can you help me locate the nearest one?", "Searching for ATM for money withdrawal", "Find ATM for urgent cash needs", "Need to find ATM for quick cash emergency"], "activate_card_start": ["Activate my new card for loyalty program enrollment", "Can you walk me through the activation process for my new bank card?"], "cancel_card_start": ["I want to cancel my card and ensure the safety of my account."], "cashier_check_start": ["Can I purchase a cashier's check through this chat service?", "I need a cashier's check, how can I get one?"], "clean_goodbye_start": ["I'm done here. Goodbye!", "Thanks for your assistance. Goodbye!", "You're amazing. Goodbye!"]}}], "possible_answer": [{"record": {"acc_routing_start": [["Please provide the routing number for my account.", "Which account number should I use for setting up eStatements?", "Please give me the account number for my business checking account."]], "activate_card_start": [["Activate my new card for loyalty program enrollment", "Can you walk me through the activation process for my new bank card?"]], "atm_finder_start": [["Looking for the closest ATM for cash withdrawal, can you assist me in finding one?", "Locate ATM for immediate cash needs", "I urgently need to find an ATM for cash withdrawal, can you help me locate the nearest one?", "Searching for ATM for money withdrawal", "Find ATM for urgent cash needs", "Need to find ATM for quick cash emergency"]], "auto_loan_payment_start": [], "bank_hours_start": [], "cancel_card_start": [["I want to cancel my card and ensure the safety of my account."]], "card_rewards_start": [["What rewards are offered for my card?", "What rewards are available on my card?", "What are the benefits of using my rewards points for entertainment?"]], "cashier_check_start": [["Can I purchase a cashier's check through this chat service?", "I need a cashier's check, how can I get one?"]], "clean_goodbye_start": [["I'm done here. Goodbye!", "Thanks for your assistance. Goodbye!", "You're amazing. Goodbye!"]]}}]}
{"id": "live_simple_107-64-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'faq_describe_accounts_start': [\"I'm interested in opening a long term savings account. What options do you have?\", 'Do you offer any special accounts for children or minors?', 'Do you offer any special accounts for individuals looking to save for a home purchase or renovation?']. Expected one of [[\"I'm interested in opening a long term savings account. What options do you have?\", 'Do you offer any special accounts for individuals looking to save for a home purchase or renovation?', 'Do you offer any special accounts for children or minors?']]."], "error_type": "value_error:list/tuple", "prompt": {"id": "live_simple_107-64-0", "question": [[{"role": "user", "content": "I have a list of customer queries and need to classify them into categories related to telephone banking services, bank working hours or locations, and descriptions of different types of bank accounts. Here are the queries:\n- 'How do I sign up for tele-banking services through the mobile app?'\n- 'Can I sign up for telephone banking services?'\n- 'Where can I find the application for telephone banking services?'\n- 'I'm interested in opening a long term savings account. What options do you have?'\n- 'Are any banks open in Sri Lanka right now?'\n- 'Do you offer any special accounts for children or minors?'\n- 'Do you offer any special accounts for individuals looking to save for a home purchase or renovation?'"}]], "function": [{"name": "record", "description": "Records the categories to which various banking-related queries are classified.", "parameters": {"type": "dict", "required": ["faq_describe_telephone_banking_start", "bank_hours_start", "faq_describe_accounts_start"], "properties": {"faq_describe_telephone_banking_start": {"type": "array", "items": {"type": "string"}, "description": "An array of strings containing queries about starting or signing up for telephone banking services."}, "bank_hours_start": {"type": "array", "items": {"type": "string"}, "description": "An array of strings containing queries regarding the working hours or locations of bank branches."}, "faq_describe_accounts_start": {"type": "array", "items": {"type": "string"}, "description": "An array of strings containing queries about descriptions of different types of bank accounts."}}}}]}, "model_result_raw": [{"record": "{\"faq_describe_telephone_banking_start\": [\"How do I sign up for tele-banking services through the mobile app?\", \"Can I sign up for telephone banking services?\", \"Where can I find the application for telephone banking services?\"], \"bank_hours_start\": [\"Are any banks open in Sri Lanka right now?\"], \"faq_describe_accounts_start\": [\"I'm interested in opening a long term savings account. What options do you have?\", \"Do you offer any special accounts for children or minors?\", \"Do you offer any special accounts for individuals looking to save for a home purchase or renovation?\"]}"}], "model_result_decoded": [{"record": {"faq_describe_telephone_banking_start": ["How do I sign up for tele-banking services through the mobile app?", "Can I sign up for telephone banking services?", "Where can I find the application for telephone banking services?"], "bank_hours_start": ["Are any banks open in Sri Lanka right now?"], "faq_describe_accounts_start": ["I'm interested in opening a long term savings account. What options do you have?", "Do you offer any special accounts for children or minors?", "Do you offer any special accounts for individuals looking to save for a home purchase or renovation?"]}}], "possible_answer": [{"record": {"faq_describe_telephone_banking_start": [["How do I sign up for tele-banking services through the mobile app?", "Can I sign up for telephone banking services?", "Where can I find the application for telephone banking services?"]], "bank_hours_start": [["Are any banks open in Sri Lanka right now?"]], "faq_describe_accounts_start": [["I'm interested in opening a long term savings account. What options do you have?", "Do you offer any special accounts for individuals looking to save for a home purchase or renovation?", "Do you offer any special accounts for children or minors?"]]}}]}
{"id": "live_simple_108-65-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'money_movement_start': ['Can you show me all outgoing wire transfers?', 'Can you assist me in combining my personal and savings accounts?', 'Please assist me in combining my accounts for a streamlined experience.']. Expected one of [['Can you show me all outgoing wire transfers?']]."], "error_type": "value_error:list/tuple", "prompt": {"id": "live_simple_108-65-0", "question": [[{"role": "user", "content": "Please classify the following customer service queries:\n- 'Can you show me all outgoing wire transfers?'\n- 'Can you assist me in combining my personal and savings accounts?'\n- 'I need my credit card limit raised.'\n- 'Can you assist me in getting a higher credit card limit?'\n- 'I need to view all transactions labeled as \"checks\" on my account.'\n- 'Please assist me in combining my accounts for a streamlined experience.'\n- 'Can you show me my recent Google Pay transactions?'\n- 'How can I link my auto loan and savings accounts?'\n- 'I would like to see the details of my most recent ATM withdrawal.'\n- 'Can you give me a summary of my recent debit card transactions?'"}]], "function": [{"name": "record", "description": "Records the classification of specified customer service queries.", "parameters": {"type": "dict", "required": ["money_movement_start", "get_transactions_start", "credit_limit_increase_start", "faq_link_accounts_start"], "properties": {"money_movement_start": {"type": "array", "items": {"type": "string"}, "description": "List of queries for transferring funds between accounts."}, "get_transactions_start": {"type": "array", "items": {"type": "string"}, "description": "List of queries for viewing transactions, including deposits, purchases, and transaction details."}, "credit_limit_increase_start": {"type": "array", "items": {"type": "string"}, "description": "List of customer requests to increase credit card limits or complaints about the current limit."}, "faq_link_accounts_start": {"type": "array", "items": {"type": "string"}, "description": "List of queries related to linking accounts within the bank's system."}}}}]}, "model_result_raw": [{"record": "{\"money_movement_start\": [\"Can you show me all outgoing wire transfers?\", \"Can you assist me in combining my personal and savings accounts?\", \"Please assist me in combining my accounts for a streamlined experience.\"], \"get_transactions_start\": [\"I need to view all transactions labeled as \\\"checks\\\" on my account.\", \"Can you show me my recent Google Pay transactions?\", \"I would like to see the details of my most recent ATM withdrawal.\", \"Can you give me a summary of my recent debit card transactions?\"], \"credit_limit_increase_start\": [\"I need my credit card limit raised.\", \"Can you assist me in getting a higher credit card limit?\"], \"faq_link_accounts_start\": [\"How can I link my auto loan and savings accounts?\"]}"}], "model_result_decoded": [{"record": {"money_movement_start": ["Can you show me all outgoing wire transfers?", "Can you assist me in combining my personal and savings accounts?", "Please assist me in combining my accounts for a streamlined experience."], "get_transactions_start": ["I need to view all transactions labeled as \"checks\" on my account.", "Can you show me my recent Google Pay transactions?", "I would like to see the details of my most recent ATM withdrawal.", "Can you give me a summary of my recent debit card transactions?"], "credit_limit_increase_start": ["I need my credit card limit raised.", "Can you assist me in getting a higher credit card limit?"], "faq_link_accounts_start": ["How can I link my auto loan and savings accounts?"]}}], "possible_answer": [{"record": {"money_movement_start": [["Can you show me all outgoing wire transfers?"]], "get_transactions_start": [["I need to view all transactions labeled as \"checks\" on my account.", "Can you show me my recent Google Pay transactions?", "I would like to see the details of my most recent ATM withdrawal.", "Can you give me a summary of my recent debit card transactions?"]], "credit_limit_increase_start": [["I need my credit card limit raised.", "Can you assist me in getting a higher credit card limit?"]], "faq_link_accounts_start": [["Can you assist me in combining my personal and savings accounts?", "Please assist me in combining my accounts for a streamlined experience.", "How can I link my auto loan and savings accounts?"]]}}]}
{"id": "live_simple_112-68-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Missing required parameter: 'acc_routing_start'."], "error_type": "simple_function_checker:missing_required", "prompt": {"id": "live_simple_112-68-0", "question": [[{"role": "user", "content": "I have a query: 'what is the weather like'. Could you classify it appropriately?"}]], "function": [{"name": "record", "description": "Records classifications for a series of queries based on the intent names provided as keyword arguments. Allows for the bulk recording of query classifications in one function call.", "parameters": {"type": "dict", "required": ["acc_routing_start", "atm_finder_start", "faq_link_accounts_start", "get_balance_start", "get_transactions_start", "outofscope"], "properties": {"acc_routing_start": {"type": "array", "items": {"type": "string"}, "description": "A list of queries requesting the bank routing numbers or account numbers."}, "atm_finder_start": {"type": "array", "items": {"type": "string"}, "description": "A list of queries asking for locations of ATMs, specified in the format of 'City, State (abbr)', such as 'Berkeley, CA' or 'New York, NY'."}, "faq_link_accounts_start": {"type": "array", "items": {"type": "string"}, "description": "A list of queries related to linking accounts within the bank's system."}, "get_balance_start": {"type": "array", "items": {"type": "string"}, "description": "A list of queries asking for account balances, available funds, or other financial balances."}, "get_transactions_start": {"type": "array", "items": {"type": "string"}, "description": "A list of queries related to viewing transactions, deposits, purchases, and transaction details."}, "outofscope": {"type": "array", "items": {"type": "string"}, "description": "A list of queries that do not classify to any other available intents."}}}}]}, "model_result_raw": [{"record": "{\"outofscope\": [\"what is the weather like\"]}"}], "model_result_decoded": [{"record": {"outofscope": ["what is the weather like"]}}], "possible_answer": [{"record": {"acc_routing_start": [], "atm_finder_start": [], "faq_link_accounts_start": [], "get_balance_start": [], "get_transactions_start": [], "outofscope": [["what is the weather like"]]}}]}
{"id": "live_simple_116-72-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Nested type checking failed for parameter 'numbers_list'. Expected outer type array with inner type <class 'float'>. Parameter value: [133, 34]."], "error_type": "type_error:nested", "prompt": {"id": "live_simple_116-72-0", "question": [[{"role": "user", "content": "What is the sum of 133 and 34?"}]], "function": [{"name": "sum_numbers", "description": "Calculates the sum of all the numbers provided in the list.", "parameters": {"type": "dict", "required": ["numbers_list"], "properties": {"numbers_list": {"type": "array", "items": {"type": "float"}, "description": "A list of floating-point numbers to be summed."}}}}]}, "model_result_raw": [{"sum_numbers": "{\"numbers_list\": [133, 34]}"}], "model_result_decoded": [{"sum_numbers": {"numbers_list": [133, 34]}}], "possible_answer": [{"sum_numbers": {"numbers_list": [[133.0, 34.0]]}}]}
{"id": "live_simple_128-83-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'url': 'https://192.168.11.33/sedgeapi/v1/cisco-nir/api/api/telemetry/flowrules/nodes?fabricName={fabricName}'. Expected one of ['https://192.168.11.33/sedgeapi/v1/cisco-nir/api/api/telemetry/flowrules/nodes?fabricName=PEK-ACI']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_128-83-0", "question": [[{"role": "user", "content": "How to generate a RESTful API request on Cisco Nexus Dashboard?\nversion:3.1.0\nIP:192.168.11.33\nAPI name: get nodes list\nParameter_fabricName:PEK-ACI"}]], "function": [{"name": "requests.get", "description": "Sends an HTTP GET request to retrieve a list of nodes associated with a specified fabric in a network.", "parameters": {"type": "dict", "required": ["fabricName"], "properties": {"url": {"type": "string", "description": "The URL to send the GET request to. The URL should include the target IP, API endpoint, and the fabricName query parameter placeholder https://<ip>/sedgeapi/v1/cisco-nir/api/api/telemetry/flowrules/nodes?fabricName={fabricName}.", "default": "https://<ip>/sedgeapi/v1/cisco-nir/api/api/telemetry/flowrules/nodes?fabricName={fabricName}"}, "fabricName": {"type": "string", "description": "The name of the fabric whose nodes are to be listed. This value is used to replace the {fabricName} placeholder in the URL."}}}}]}, "model_result_raw": [{"requests_get": "{\"url\": \"https://192.168.11.33/sedgeapi/v1/cisco-nir/api/api/telemetry/flowrules/nodes?fabricName={fabricName}\", \"fabricName\": \"PEK-ACI\"}"}], "model_result_decoded": [{"requests_get": {"url": "https://192.168.11.33/sedgeapi/v1/cisco-nir/api/api/telemetry/flowrules/nodes?fabricName={fabricName}", "fabricName": "PEK-ACI"}}], "possible_answer": [{"requests.get": {"url": ["https://192.168.11.33/sedgeapi/v1/cisco-nir/api/api/telemetry/flowrules/nodes?fabricName=PEK-ACI"], "fabricName": ["PEK-ACI"]}}]}
{"id": "live_simple_129-83-1", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'url': 'https://3.321.3232.2/sedgeapi/v1/cisco-nir/api/api/telemetry/flowrules/nodes?fabricName={fabricName}'. Expected one of ['https://3.321.3232.2/sedgeapi/v1/cisco-nir/api/api/telemetry/flowrules/nodes?fabricName=fab-ed']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_129-83-1", "question": [[{"role": "user", "content": "get list of nodes for fabric fab-ed and ip is 3.321.3232.2"}]], "function": [{"name": "requests.get", "description": "Sends an HTTP GET request to retrieve a list of nodes associated with a specified fabric in a network.", "parameters": {"type": "dict", "required": ["fabricName"], "properties": {"url": {"type": "string", "description": "The URL to send the GET request to. The URL should include the target IP, API endpoint, and the fabricName query parameter placeholder in https://<ip>/sedgeapi/v1/cisco-nir/api/api/telemetry/flowrules/nodes?fabricName={fabricName}.", "default": "https://<ip>/sedgeapi/v1/cisco-nir/api/api/telemetry/flowrules/nodes?fabricName={fabricName}"}, "fabricName": {"type": "string", "description": "The name of the fabric whose nodes are to be listed. This value is used to replace the {fabricName} placeholder in the URL."}}}}]}, "model_result_raw": [{"requests_get": "{\"url\": \"https://3.321.3232.2/sedgeapi/v1/cisco-nir/api/api/telemetry/flowrules/nodes?fabricName={fabricName}\", \"fabricName\": \"fab-ed\"}"}], "model_result_decoded": [{"requests_get": {"url": "https://3.321.3232.2/sedgeapi/v1/cisco-nir/api/api/telemetry/flowrules/nodes?fabricName={fabricName}", "fabricName": "fab-ed"}}], "possible_answer": [{"requests.get": {"url": ["https://3.321.3232.2/sedgeapi/v1/cisco-nir/api/api/telemetry/flowrules/nodes?fabricName=fab-ed"], "fabricName": ["fab-ed"]}}]}
{"id": "live_simple_138-91-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'dateOrTime': '2023-11-01T18:00:00Z'. Expected one of ['2023-11-01T18:00:00']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_138-91-0", "question": [[{"role": "user", "content": "Reschedule event 'Bob-123' to November 1, 2023 at 6pm CEST"}]], "function": [{"name": "reschedule", "description": "Moves an event to a new specified time, adjusting for the provided timezone.", "parameters": {"type": "dict", "required": ["identifier", "dateOrTime"], "properties": {"identifier": {"type": "string", "description": "A unique identifier for the event to be rescheduled."}, "dateOrTime": {"type": "string", "description": "The new date and time to which the event should be moved, in ISO-8601 format (e.g., 'YYYY-MM-DDTHH:MM:SSZ'). Timezone is not included and should be specified separately."}, "timezone": {"type": "string", "description": "The Olson timezone identifier for the new event time, such as 'Asia/Tokyo'.", "default": "UTC", "enum": ["UTC", "Asia/Tokyo", "America/New_York", "Europe/London"]}}}}]}, "model_result_raw": [{"reschedule": "{\"identifier\": \"Bob-123\", \"dateOrTime\": \"2023-11-01T18:00:00Z\", \"timezone\": \"Europe/London\"}"}], "model_result_decoded": [{"reschedule": {"identifier": "Bob-123", "dateOrTime": "2023-11-01T18:00:00Z", "timezone": "Europe/London"}}], "possible_answer": [{"reschedule": {"identifier": ["Bob-123"], "dateOrTime": ["2023-11-01T18:00:00"], "timezone": ["Europe/London"]}}]}
{"id": "live_simple_145-95-2", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'command': 'dir C:'. Expected one of ['dir C:\\\\', 'dir C:\\\\\\\\']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_145-95-2", "question": [[{"role": "user", "content": "LIST C DRIIVE"}]], "function": [{"name": "cmd_controller.execute", "description": "Executes a system-level command using os.system() on Windows operating systems. It can execute single or multiple commands chained with '&&'.", "parameters": {"type": "dict", "required": ["command"], "properties": {"command": {"type": "string", "description": "The system command to be executed. To execute multiple commands, separate them with '&&'. For example, 'dir && echo done'."}, "unit": {"type": "string", "description": "The unit of measurement for the command execution time, such as 'seconds' or 'milliseconds'", "enum": ["seconds", "milliseconds"], "default": "N/A"}}}}]}, "model_result_raw": [{"cmd_controller_execute": "{\"command\": \"dir C:\"}"}], "model_result_decoded": [{"cmd_controller_execute": {"command": "dir C:"}}], "possible_answer": [{"cmd_controller.execute": {"command": ["dir C:\\", "dir C:\\\\"], "unit": ["", "N/A"]}}]}
{"id": "live_simple_147-95-4", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'command': 'taskkill /im timer.exe'. Expected one of ['taskkill /F /IM timer.exe']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_147-95-4", "question": [[{"role": "user", "content": "remove the timer.exe that i have been set earlier using the taskkill command"}]], "function": [{"name": "cmd_controller.execute", "description": "Executes a system-level command using os.system() on Windows operating systems. It can execute single or multiple commands chained with '&&'.", "parameters": {"type": "dict", "required": ["command"], "properties": {"command": {"type": "string", "description": "The system command to be executed. To execute multiple commands, separate them with '&&'. For example, 'dir && echo done'."}, "unit": {"type": "string", "description": "The unit of measurement for the command execution time, such as 'seconds' or 'milliseconds'", "enum": ["seconds", "milliseconds"], "default": "N/A"}}}}]}, "model_result_raw": [{"cmd_controller_execute": "{\"command\": \"taskkill /im timer.exe\"}"}], "model_result_decoded": [{"cmd_controller_execute": {"command": "taskkill /im timer.exe"}}], "possible_answer": [{"cmd_controller.execute": {"command": ["taskkill /F /IM timer.exe"], "unit": ["", "N/A"]}}]}
{"id": "live_simple_148-95-5", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. 'str' object has no attribute 'keys'"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "live_simple_148-95-5", "question": [[{"role": "user", "content": "what is the file in c."}]], "function": [{"name": "cmd_controller.execute", "description": "Executes a system-level command using os.system() on Windows operating systems. It can execute single or multiple commands chained with '&&'", "parameters": {"type": "dict", "required": ["command"], "properties": {"command": {"type": "string", "description": "The system command to be executed. To execute multiple commands, separate them with '&&'. For example, 'dir && echo done'."}, "unit": {"type": "string", "description": "The unit of measurement for the command execution time, such as 'seconds' or 'milliseconds'", "enum": ["seconds", "milliseconds"], "default": "N/A"}}}}]}, "model_result_raw": "In C programming, a file is a collection of bytes stored on a secondary storage device, which can be a hard drive, solid-state drive, or any other storage medium. Files are used to store data in a non-volatile manner, meaning that the data remains even when the computer is turned off.\n\nIn C, you can work with files using the standard input/output library, which provides functions for opening, reading from, writing to, and closing files. Here are some common file-related functions in C:\n\n1. `fopen()`: Opens a file and returns a file pointer.\n2. `fread()`: Reads data from a file.\n3. `fwrite()`: Writes data to a file.\n4. `fclose()`: Closes a file.\n5. `fseek()`: Moves the file pointer to a specific location in the file.\n6. `ftell()`: Returns the current position of the file pointer.\n7. `fscanf()`: Reads formatted data from a file.\n8. `fprintf()`: Writes formatted data to a file.\n\nHere's a simple example of how to open a file, write some text to it, and then close it:\n\n```c\n#include <stdio.h>\n\nint main() {\n    FILE *file = fopen(\"example.txt\", \"w\");\n    if (file == NULL) {\n        printf(\"Could not open file\\n\");\n        return 1;\n    }\n\n    fprintf(file, \"Hello, world!\\n\");\n    fclose(file);\n\n    return 0;\n}\n```\n\nIn this example, we open a file named \"example.txt\" in write mode (`\"w\"`), write the string \"Hello, world!\\n\" to it, and then close the file. If the file cannot be opened, an error message is printed.", "possible_answer": [{"cmd_controller.execute": {"command": ["dir C:\\", "dir C:\\\\"], "unit": ["", "N/A"]}}]}
{"id": "live_simple_152-95-9", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'command': 'dir D:\\\\ && echo testing.txt'. Expected one of ['dir D:\\\\\\\\ && echo testing.txt']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_152-95-9", "question": [[{"role": "user", "content": "list file in d drive and make file called testing.txt. This can be achieved through dir D:\\\\ && echo testing.txt."}]], "function": [{"name": "cmd_controller.execute", "description": "Executes a system-level command using os.system() on Windows operating systems. It can execute single or multiple commands chained with '&&'.", "parameters": {"type": "dict", "required": ["command"], "properties": {"command": {"type": "string", "description": "The system command to be executed. To execute multiple commands, separate them with '&&'. For example, 'dir && echo done'."}, "unit": {"type": "string", "description": "The unit of measurement for the command execution time, such as 'seconds' or 'milliseconds'", "enum": ["seconds", "milliseconds"], "default": "N/A"}}}}]}, "model_result_raw": [{"cmd_controller_execute": "{\"command\": \"dir D:\\\\ && echo testing.txt\"}"}], "model_result_decoded": [{"cmd_controller_execute": {"command": "dir D:\\ && echo testing.txt"}}], "possible_answer": [{"cmd_controller.execute": {"command": ["dir D:\\\\ && echo testing.txt"], "unit": ["", "N/A"]}}]}
{"id": "live_simple_156-95-13", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'command': 'dir C:'. Expected one of ['dir C:\\\\', 'dir C:\\\\\\\\']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_156-95-13", "question": [[{"role": "user", "content": "u have the full control of command prompt if the task need to execute and coommand just do it list c drive"}]], "function": [{"name": "cmd_controller.execute", "description": "Executes a system-level command using os.system() on Windows operating systems. It can execute single or multiple commands chained with '&&'.", "parameters": {"type": "dict", "required": ["command"], "properties": {"command": {"type": "string", "description": "The system command to be executed. To execute multiple commands, separate them with '&&'. For example, 'dir && echo done'."}, "unit": {"type": "string", "description": "The unit of measurement for the command execution time, such as 'seconds' or 'milliseconds'", "enum": ["seconds", "milliseconds"], "default": "N/A"}}}}]}, "model_result_raw": [{"cmd_controller_execute": "{\"command\": \"dir C:\"}"}], "model_result_decoded": [{"cmd_controller_execute": {"command": "dir C:"}}], "possible_answer": [{"cmd_controller.execute": {"command": ["dir C:\\", "dir C:\\\\"], "unit": ["", "N/A"]}}]}
{"id": "live_simple_157-95-14", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'unit': 'seconds'. Expected one of ['', 'N/A']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_157-95-14", "question": [[{"role": "user", "content": "what is the time in pc, using the command echo %time%"}]], "function": [{"name": "cmd_controller.execute", "description": "Executes a system-level command using os.system() on Windows operating systems. It can execute single or multiple commands chained with '&&'.", "parameters": {"type": "dict", "required": ["command"], "properties": {"command": {"type": "string", "description": "The system command to be executed. To execute multiple commands, separate them with '&&'. For example, 'dir && echo done'."}, "unit": {"type": "string", "description": "The unit of measurement for the command execution time, such as 'seconds' or 'milliseconds'", "enum": ["seconds", "milliseconds"], "default": "N/A"}}}}]}, "model_result_raw": [{"cmd_controller_execute": "{\"command\": \"echo %time%\", \"unit\": \"seconds\"}"}], "model_result_decoded": [{"cmd_controller_execute": {"command": "echo %time%", "unit": "seconds"}}], "possible_answer": [{"cmd_controller.execute": {"command": ["echo %time%"], "unit": ["", "N/A"]}}]}
{"id": "live_simple_158-95-15", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'command': 'taskkill /im code.exe'. Expected one of ['taskkill /IM code.exe /F', 'taskkill /F /IM code.exe']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_158-95-15", "question": [[{"role": "user", "content": "kill vs code using taskkill for code.exe"}]], "function": [{"name": "cmd_controller.execute", "description": "Executes a system-level command using os.system() on Windows operating systems. It can execute single or multiple commands chained with '&&'.", "parameters": {"type": "dict", "required": ["command"], "properties": {"command": {"type": "string", "description": "The system command to be executed. To execute multiple commands, separate them with '&&'. For example, 'dir && echo done'."}, "unit": {"type": "string", "description": "The unit of measurement for the command execution time, such as 'seconds' or 'milliseconds'", "enum": ["seconds", "milliseconds"], "default": "N/A"}}}}]}, "model_result_raw": [{"cmd_controller_execute": "{\"command\": \"taskkill /im code.exe\"}"}], "model_result_decoded": [{"cmd_controller_execute": {"command": "taskkill /im code.exe"}}], "possible_answer": [{"cmd_controller.execute": {"command": ["taskkill /IM code.exe /F", "taskkill /F /IM code.exe"], "unit": ["", "N/A"]}}]}
{"id": "live_simple_161-96-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. 'str' object has no attribute 'keys'"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "live_simple_161-96-0", "question": [[{"role": "user", "content": "{\n    \"response\": \" The image contains four logos of superheroes from DC Comics and Marvel Comics. They are Superman, Iron Man, Hulk, and Batman. The logos are all in different colors and shapes. Superman's logo is a red and yellow \\\"S\\\" on a blue background. Iron Man's logo is a red and yellow circle with a black face mask. Hulk's logo is a green fist with a black outline. Batman's logo is a black bat on a yellow background.\\n\\nHere is a list of objects that could contain copyrighted material:\\n\\n* Blue square\\n* Red square\\n* Green square\\n* Yellow square\\n* Superman logo\\n* Iron Man logo\\n* Hulk logo\\n* Batman logo\\n* Fist\\n* Bat\\n* Face mask\\n* Outline\"\n}\n"}]], "function": [{"name": "get_items", "description": "Retrieve a list of items that are analyzed for copyright detection purposes.", "parameters": {"type": "dict", "required": ["items"], "properties": {"items": {"type": "array", "items": {"type": "string"}, "description": "A list of item descriptors to be analyzed, such as 'yellow logo', 'signature tune', 'unique font'."}}}}]}, "model_result_raw": "The image you've described contains logos of four superheroes from DC Comics and Marvel Comics: Superman, Iron Man, Hulk, and Batman. Each logo is distinct in color and shape. Here's a breakdown of each logo:\n\n1. Superman's logo is a red and yellow \"S\" on a blue background.\n2. Iron Man's logo is a red and yellow circle with a black face mask.\n3. Hulk's logo is a green fist with a black outline.\n4. Batman's logo is a black bat on a yellow background.\n\nBased on the description, the following objects could potentially contain copyrighted material:\n\n- Blue square\n- Red square\n- Green square\n- Yellow square\n- Superman logo\n- Iron Man logo\n- Hulk logo\n- Batman logo\n- Fist\n- Bat\n- Face mask\n- Outline\n\nThese items are likely to be analyzed for copyright detection purposes.", "possible_answer": [{"get_items": {"items": [["Blue square", "Red square", "Green square", "Yellow square", "Superman logo", "Iron Man logo", "Hulk logo", "Batman logo", "Fist", "Bat", "Face mask", "Outline"]]}}]}
{"id": "live_simple_164-97-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'copyright_content': \"The image contains the Coca-Cola logo, which is a registered trademark of The Coca-Cola Company. The Coca-Cola Company is a multinational beverage corporation headquartered in Atlanta, Georgia, United States. The company is the world's largest beverage company, refreshing consumers with more than 500 sparkling and still brands. Led by Coca-Cola, one of the world's most valuable brands, our company's portfolio features 20 billion-dollar brands, 19 of which are available in more than 200 countries. These brands include Diet Coke, Fanta, Sprite, Coca-Cola Zero, vitaminwater, Powerade, Minute Maid, Simply, Dasani, FUZE TEA and Del Valle.\". Expected one of ['Coca-Cola logo']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_164-97-0", "question": [[{"role": "user", "content": "The image contains the Coca-Cola logo, which is a registered trademark of The Coca-Cola Company. The Coca-Cola Company is a multinational beverage corporation headquartered in Atlanta, Georgia, United States. The company is the world's largest beverage company, refreshing consumers with more than 500 sparkling and still brands. Led by Coca-Cola, one of the world's most valuable brands, our company's portfolio features 20 billion-dollar brands, 19 of which are available in more than 200 countries. These brands include Diet Coke, Fanta, Sprite, Coca-Cola Zero, vitaminwater, Powerade, Minute Maid, Simply, Dasani, FUZE TEA and Del Valle.\\n\\nI am 100% confident that the image contains copyrighted content."}]], "function": [{"name": "get_copyright_info", "description": "Retrieves copyright information for a given content, including the holder's name and a confidence score representing the accuracy of the information.", "parameters": {"type": "dict", "required": ["copyright_content", "copyright_holder", "confidence_score"], "properties": {"copyright_content": {"type": "string", "description": "The specific content that is claimed to be copyrighted."}, "copyright_holder": {"type": "string", "description": "The name of the individual or organization that holds the copyright."}, "confidence_score": {"type": "float", "description": "A decimal value representing the confidence score as a percentage, ranging from 0.0 to 100.0."}}}}]}, "model_result_raw": [{"get_copyright_info": "{\"copyright_content\": \"The image contains the Coca-Cola logo, which is a registered trademark of The Coca-Cola Company. The Coca-Cola Company is a multinational beverage corporation headquartered in Atlanta, Georgia, United States. The company is the world's largest beverage company, refreshing consumers with more than 500 sparkling and still brands. Led by Coca-Cola, one of the world's most valuable brands, our company's portfolio features 20 billion-dollar brands, 19 of which are available in more than 200 countries. These brands include Diet Coke, Fanta, Sprite, Coca-Cola Zero, vitaminwater, Powerade, Minute Maid, Simply, Dasani, FUZE TEA and Del Valle.\", \"copyright_holder\": \"The Coca-Cola Company\", \"confidence_score\": 100.0}"}], "model_result_decoded": [{"get_copyright_info": {"copyright_content": "The image contains the Coca-Cola logo, which is a registered trademark of The Coca-Cola Company. The Coca-Cola Company is a multinational beverage corporation headquartered in Atlanta, Georgia, United States. The company is the world's largest beverage company, refreshing consumers with more than 500 sparkling and still brands. Led by Coca-Cola, one of the world's most valuable brands, our company's portfolio features 20 billion-dollar brands, 19 of which are available in more than 200 countries. These brands include Diet Coke, Fanta, Sprite, Coca-Cola Zero, vitaminwater, Powerade, Minute Maid, Simply, Dasani, FUZE TEA and Del Valle.", "copyright_holder": "The Coca-Cola Company", "confidence_score": 100.0}}], "possible_answer": [{"get_copyright_info": {"copyright_content": ["Coca-Cola logo"], "copyright_holder": ["The Coca-Cola Company"], "confidence_score": [100.0]}}]}
{"id": "live_simple_169-99-3", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'command': '\"d:/playground/pc_contoller/env/Scripts/python.exe\" d:/playground/pc_contoller/test.py'. Expected one of ['d:/playground/pc_contoller/env/Scripts/python.exe d:/playground/pc_contoller/test.py']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_169-99-3", "question": [[{"role": "user", "content": "Run the Python script located at d:/playground/pc_contoller/test.py using the Python interpreter in the virtual environment at d:/playground/pc_contoller/env/Scripts/python.exe?"}]], "function": [{"name": "cmd_controller.execute", "description": "Executes a given command using the os.system() function specifically for Windows operating systems. For multiple commands, separate them with '&&'. For complex tasks, create and run a .bat file.", "parameters": {"type": "dict", "required": ["command"], "properties": {"command": {"type": "string", "description": "The Windows command line instruction(s) to be executed. Use '&&' between commands for multiple instructions. For complex sequences, encapsulate the logic within a .bat file and provide the execution command here."}}}}]}, "model_result_raw": [{"cmd_controller_execute": "{\"command\": \"\\\"d:/playground/pc_contoller/env/Scripts/python.exe\\\" d:/playground/pc_contoller/test.py\"}"}], "model_result_decoded": [{"cmd_controller_execute": {"command": "\"d:/playground/pc_contoller/env/Scripts/python.exe\" d:/playground/pc_contoller/test.py"}}], "possible_answer": [{"cmd_controller.execute": {"command": ["d:/playground/pc_contoller/env/Scripts/python.exe d:/playground/pc_contoller/test.py"]}}]}
{"id": "live_simple_170-99-4", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'command': 'dir C:'. Expected one of ['dir C:\\\\', 'dir C:\\\\\\\\']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_170-99-4", "question": [[{"role": "user", "content": "list c drive"}]], "function": [{"name": "cmd_controller.execute", "description": "Executes a given command using the os.system() function specifically for Windows operating systems. For multiple commands, separate them with '&&'. For complex tasks, create and run a .bat file.", "parameters": {"type": "dict", "required": ["command"], "properties": {"command": {"type": "string", "description": "The Windows command line instruction(s) to be executed. Use '&&' between commands for multiple instructions. For complex sequences, encapsulate the logic within a .bat file and provide the execution command here."}}}}]}, "model_result_raw": [{"cmd_controller_execute": "{\"command\": \"dir C:\"}"}], "model_result_decoded": [{"cmd_controller_execute": {"command": "dir C:"}}], "possible_answer": [{"cmd_controller.execute": {"command": ["dir C:\\", "dir C:\\\\"]}}]}
{"id": "live_simple_196-116-4", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'date': '2023-04-26'. Expected one of ['2023-04-27']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_196-116-4", "question": [[{"role": "user", "content": "Could you provide the forecast for Alameda on the upcoming Wednesday, today is Monday April 25th 2023?"}]], "function": [{"name": "Weather_1_GetWeather", "description": "Retrieves the weather forecast for a specified city on a particular date.", "parameters": {"type": "dict", "required": ["city"], "properties": {"city": {"type": "string", "description": "The name of the city for which weather information is requested."}, "date": {"type": "string", "description": "The date for which weather information is requested, in the format of 'YYYY-MM-DD'. If not provided, the current date is used.", "default": "2019-03-01"}}}}]}, "model_result_raw": [{"Weather_1_GetWeather": "{\"city\": \"Alameda\", \"date\": \"2023-04-26\"}"}], "model_result_decoded": [{"Weather_1_GetWeather": {"city": "Alameda", "date": "2023-04-26"}}], "possible_answer": [{"Weather_1_GetWeather": {"city": ["Alameda"], "date": ["2023-04-27"]}}]}
{"id": "live_simple_199-116-7", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'city': 'Marshall, MN'. Expected one of ['Marshall']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_199-116-7", "question": [[{"role": "user", "content": "Could you tell me the weather forecast for Marshall, MN on March 5th 2023?"}]], "function": [{"name": "Weather_1_GetWeather", "description": "Retrieves the weather forecast for a specified city on a particular date.", "parameters": {"type": "dict", "required": ["city"], "properties": {"city": {"type": "string", "description": "The name of the city for which weather information is requested."}, "date": {"type": "string", "description": "The date for which weather information is requested, in the format of 'YYYY-MM-DD'. If not provided, the current date is used.", "default": "2019-03-01"}}}}]}, "model_result_raw": [{"Weather_1_GetWeather": "{\"city\": \"Marshall, MN\", \"date\": \"2023-03-05\"}"}], "model_result_decoded": [{"Weather_1_GetWeather": {"city": "Marshall, MN", "date": "2023-03-05"}}], "possible_answer": [{"Weather_1_GetWeather": {"city": ["Marshall"], "date": ["2023-03-05"]}}]}
{"id": "live_simple_203-116-11", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'city': 'Washington, DC'. Expected one of ['Washington']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_203-116-11", "question": [[{"role": "user", "content": "Hi, could you help me check the weather in Washington, DC for March 1st, 2023 please?"}]], "function": [{"name": "Weather_1_GetWeather", "description": "Retrieves the weather forecast for a specified city on a particular date.", "parameters": {"type": "dict", "required": ["city"], "properties": {"city": {"type": "string", "description": "The name of the city for which weather information is requested."}, "date": {"type": "string", "description": "The date for which weather information is requested, in the format of 'YYYY-MM-DD'. If not provided, the current date is used.", "default": "2019-03-01"}}}}]}, "model_result_raw": [{"Weather_1_GetWeather": "{\"city\": \"Washington, DC\", \"date\": \"2023-03-01\"}"}], "model_result_decoded": [{"Weather_1_GetWeather": {"city": "Washington, DC", "date": "2023-03-01"}}], "possible_answer": [{"Weather_1_GetWeather": {"city": ["Washington"], "date": ["2023-03-01"]}}]}
{"id": "live_simple_204-116-12", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'city': 'Rutherford, NJ'. Expected one of ['Rutherford']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_204-116-12", "question": [[{"role": "user", "content": "Could you tell me what the weather will be like in Rutherford, NJ, on April 22nd 2023?"}]], "function": [{"name": "Weather_1_GetWeather", "description": "Retrieves the weather forecast for a specified city on a particular date.", "parameters": {"type": "dict", "required": ["city"], "properties": {"city": {"type": "string", "description": "The name of the city for which weather information is requested."}, "date": {"type": "string", "description": "The date for which weather information is requested, in the format of 'YYYY-MM-DD'. If not provided, the current date is used.", "default": "2019-03-01"}}}}]}, "model_result_raw": [{"Weather_1_GetWeather": "{\"city\": \"Rutherford, NJ\", \"date\": \"2023-04-22\"}"}], "model_result_decoded": [{"Weather_1_GetWeather": {"city": "Rutherford, NJ", "date": "2023-04-22"}}], "possible_answer": [{"Weather_1_GetWeather": {"city": ["Rutherford"], "date": ["2023-04-22"]}}]}
{"id": "live_simple_205-116-13", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'date': '2023-04-29'. Expected one of ['2023-04-27']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_205-116-13", "question": [[{"role": "user", "content": "What's the weather forecast for Berkeley on the upcoming Saturday? today is thursday April 25th 2023"}]], "function": [{"name": "Weather_1_GetWeather", "description": "Retrieves the weather forecast for a specified city on a particular date.", "parameters": {"type": "dict", "required": ["city"], "properties": {"city": {"type": "string", "description": "The name of the city for which weather information is requested."}, "date": {"type": "string", "description": "The date for which weather information is requested, in the format of 'YYYY-MM-DD'. If not provided, the current date is used.", "default": "2019-03-01"}}}}]}, "model_result_raw": [{"Weather_1_GetWeather": "{\"city\": \"Berkeley\", \"date\": \"2023-04-29\"}"}], "model_result_decoded": [{"Weather_1_GetWeather": {"city": "Berkeley", "date": "2023-04-29"}}], "possible_answer": [{"Weather_1_GetWeather": {"city": ["Berkeley"], "date": ["2023-04-27"]}}]}
{"id": "live_simple_227-118-1", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'text': '\\n'. Expected one of ['\u6211\u7231\u5b66\u4e60']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_227-118-1", "question": [[{"role": "user", "content": "Listen to the phrase '\u6211\u7231\u5b66\u4e60' in a male voice and in Chinese, and could I get the audio in WAV format, please?"}]], "function": [{"name": "text_to_speech.convert", "description": "Converts input text into spoken audio, providing the resulting audio in a specified format.", "parameters": {"type": "dict", "required": ["text"], "properties": {"text": {"type": "string", "description": "The text to be converted to speech."}, "language": {"type": "string", "description": "The language to convert the input text to, use default if nothing specified", "enum": ["en-US", "es-ES", "de-DE", "fr-FR", "it-IT", "zh-CN"], "default": "en-US"}, "gender": {"type": "string", "description": "The gender of the voice used for the text-to-speech conversion, use default if nothing specified", "enum": ["male", "female"], "default": "female"}, "format": {"type": "string", "description": "The audio format of the resulting spoken text, use default if nothing specified", "enum": ["mp3", "wav", "ogg"], "default": "mp3"}, "speed": {"type": "float", "description": "The speed of the speech, represented as a float where 1.0 is the normal speed.", "default": 1.0}}}}]}, "model_result_raw": [{"text_to_speech_convert": "{\"text\": \"\\n\", \"language\": \"zh-CN\", \"gender\": \"male\", \"format\": \"wav\"}"}], "model_result_decoded": [{"text_to_speech_convert": {"text": "\n", "language": "zh-CN", "gender": "male", "format": "wav"}}], "possible_answer": [{"text_to_speech.convert": {"text": ["\u6211\u7231\u5b66\u4e60"], "language": ["zh-CN"], "gender": ["male"], "format": ["wav"], "speed": ["", 1.0]}}]}
{"id": "live_simple_231-122-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'new_datetime': '2022-10-27T16:30:00Z'. Expected one of ['2022-10-30T16:30:00Z']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_231-122-0", "question": [[{"role": "user", "content": "Can you move my next gym session, which is event number 456123, to next Thursday at 4:30 PM? Today is monday 2022-10-20"}]], "function": [{"name": "reschedule_event", "description": "Reschedule an event to a new date or time, specified in ISO-8601 format.", "parameters": {"type": "dict", "required": ["event_identifier", "new_datetime"], "properties": {"event_identifier": {"type": "string", "description": "The unique identifier of the event to be rescheduled."}, "new_datetime": {"type": "string", "description": "The new date and time for the event in ISO-8601 format, such as '2023-04-15T13:45:00Z'."}}}}]}, "model_result_raw": [{"reschedule_event": "{\"event_identifier\": \"456123\", \"new_datetime\": \"2022-10-27T16:30:00Z\"}"}], "model_result_decoded": [{"reschedule_event": {"event_identifier": "456123", "new_datetime": "2022-10-27T16:30:00Z"}}], "possible_answer": [{"reschedule_event": {"event_identifier": ["456123"], "new_datetime": ["2022-10-30T16:30:00Z"]}}]}
{"id": "live_simple_250-132-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'items': ['Big Mac', 'Big Mac', 'McFlurry']. Expected one of [['Big Mac', 'McFlurry']]."], "error_type": "value_error:list/tuple", "prompt": {"id": "live_simple_250-132-0", "question": [[{"role": "user", "content": "Want to have an order for me from McDonald's on Uber Eats? I'd like two Big Macs and one McFlurry."}]], "function": [{"name": "uber.eat.order", "description": "Place an order for food on Uber Eats, specifying the restaurant, items, and their respective quantities.", "parameters": {"type": "dict", "required": ["restaurants", "items", "quantities"], "properties": {"restaurants": {"type": "string", "description": "The name of the restaurant from which to order food."}, "items": {"type": "array", "items": {"type": "string"}, "description": "A list of food item names selected from the restaurant's menu."}, "quantities": {"type": "array", "items": {"type": "integer"}, "description": "An array of integers representing the quantity for each corresponding item in the 'items' list. Must have the same number of elements as 'items'."}}}}]}, "model_result_raw": [{"uber_eat_order": "{\"restaurants\": \"McDonald's\", \"items\": [\"Big Mac\", \"Big Mac\", \"McFlurry\"], \"quantities\": [2, 1]}"}], "model_result_decoded": [{"uber_eat_order": {"restaurants": "McDonald's", "items": ["Big Mac", "Big Mac", "McFlurry"], "quantities": [2, 1]}}], "possible_answer": [{"uber.eat.order": {"restaurants": ["McDonald's", "McDonalds", "McDonald"], "items": [["Big Mac", "McFlurry"]], "quantities": [[2, 1]]}}]}
{"id": "live_simple_252-134-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. 'str' object has no attribute 'keys'"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "live_simple_252-134-0", "question": [[{"role": "user", "content": "Hi, I am Karan. Can you tell me the current status of my Indigo flight? My ticket number is IND4567."}]], "function": [{"name": "flight.status.check", "description": "Checks the current status of a flight using the airline, passenger's name, and ticket number.", "parameters": {"type": "dict", "required": ["airlines", "person_name", "ticket_number"], "properties": {"airlines": {"type": "string", "description": "The name of the airline for which to check the flight status, such as 'Delta' or 'United'."}, "person_name": {"type": "string", "description": "The full name or first name of the passenger as it appears on the ticket, in the format 'First Last'. If only one name mentioned assume last name is not specified and instead use LNU"}, "ticket_number": {"type": "string", "description": "The alphanumeric ticket number associated with the passenger's flight booking."}}}}]}, "model_result_raw": "Sure, I can help you with that. Could you please provide me with your full name as it appears on the ticket?", "possible_answer": [{"flight.status.check": {"airlines": ["Indigo"], "person_name": ["Karan"], "ticket_number": ["IND4567"]}}]}
{"id": "live_simple_256-137-0", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'statement': 'I have submitted a complaint and I would like to check its status'. Expected one of ['I have had submit a compaint and I like to check its status']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_256-137-0", "question": [[{"role": "system", "content": "call HANDOVER function to transfer the request if user asks a question."}, {"role": "user", "content": "I have had submit a compaint and I like to check its status"}]], "function": [{"name": "answer_question", "description": "This function transfers the chat interaction to a human agent when the automated system encounters a question that it cannot answer.", "parameters": {"type": "dict", "required": ["statement"], "properties": {"statement": {"type": "string", "description": "The question posed by the user that needs to be transferred to a human agent."}, "urgency": {"type": "string", "description": "The level of urgency for the question to be answered.", "enum": ["low", "medium", "high"], "default": "medium"}, "language": {"type": "string", "description": "The language in which the question is asked, using ISO 639-1 codes (e.g., 'en' for English, 'es' for Spanish)", "default": "en"}}}}]}, "model_result_raw": [{"answer_question": "{\"statement\": \"I have submitted a complaint and I would like to check its status\", \"urgency\": \"medium\", \"language\": \"en\"}"}], "model_result_decoded": [{"answer_question": {"statement": "I have submitted a complaint and I would like to check its status", "urgency": "medium", "language": "en"}}], "possible_answer": [{"answer_question": {"statement": ["I have had submit a compaint and I like to check its status"], "urgency": ["", "medium"], "language": ["", "en"]}}]}
{"id": "live_simple_257-137-1", "model_name": "meetkai_functionary-medium-v3.1-FC", "test_category": "live_simple", "valid": false, "error": ["Invalid value for parameter 'statement': 'What is the minimum package arrival time?'. Expected one of ['Can you tell me what is the minimum package arrival time?']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "live_simple_257-137-1", "question": [[{"role": "system", "content": "call HANDOVER function to transfer the request if user asks a question."}, {"role": "user", "content": "Can you tell me what is the minimum package arrival time? "}]], "function": [{"name": "answer_question", "description": "This function transfers the chat interaction to a human agent when the automated system encounters a question that it cannot answer.", "parameters": {"type": "dict", "required": ["statement"], "properties": {"statement": {"type": "string", "description": "The question posed by the user that needs to be transferred to a human agent."}, "urgency": {"type": "string", "description": "The level of urgency for the question to be answered.", "enum": ["low", "medium", "high"], "default": "medium"}, "language": {"type": "string", "description": "The language in which the question is asked, using ISO 639-1 codes (e.g., 'en' for English, 'es' for Spanish).", "default": "en"}}}}]}, "model_result_raw": [{"answer_question": "{\"statement\": \"What is the minimum package arrival time?\", \"urgency\": \"medium\", \"language\": \"en\"}"}], "model_result_decoded": [{"answer_question": {"statement": "What is the minimum package arrival time?", "urgency": "medium", "language": "en"}}], "possible_answer": [{"answer_question": {"statement": ["Can you tell me what is the minimum package arrival time?"], "urgency": ["", "medium"], "language": ["", "en"]}}]}