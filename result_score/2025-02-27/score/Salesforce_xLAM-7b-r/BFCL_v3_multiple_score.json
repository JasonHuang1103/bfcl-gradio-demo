{"accuracy": 0.955, "correct_count": 191, "total_count": 200}
{"id": "multiple_7", "model_name": "Salesforce_xLAM-7b-r", "test_category": "multiple", "valid": false, "error": ["Wrong number of functions."], "error_type": "multiple_function_checker:wrong_count", "prompt": {"id": "multiple_7", "question": [[{"role": "user", "content": "How to assess the population growth in deer and their impact on woodland in Washington state over the past decade?"}]], "function": [{"name": "wildlife_population.assess_growth", "description": "Assesses the population growth of a specific species in a specified location over a period.", "parameters": {"type": "dict", "properties": {"species": {"type": "string", "description": "The species for which the growth is to be calculated."}, "location": {"type": "string", "description": "The area where the species is present."}, "duration": {"type": "integer", "description": "The time period for which the population growth should be calculated in years."}}, "required": ["species", "location", "duration"]}}, {"name": "ecological_impact.analyze", "description": "Analyzes the impact of a species on a particular ecosystem.", "parameters": {"type": "dict", "properties": {"species": {"type": "string", "description": "The species whose impact is to be calculated."}, "ecosystem": {"type": "string", "description": "The ecosystem being affected."}, "location": {"type": "string", "description": "The area where the impact is analyzed."}, "timeframe": {"type": "integer", "description": "The time period for which the impact analysis should be carried out in years.", "default": 5}}, "required": ["species", "ecosystem", "location"]}}]}, "model_result_raw": [{"name": "wildlife_population.assess_growth", "arguments": {"species": "deer", "location": "Washington state", "duration": 10}}, {"name": "ecological_impact.analyze", "arguments": {"species": "deer", "ecosystem": "woodland", "location": "Washington state"}}], "model_result_decoded": [{"wildlife_population.assess_growth": {"species": "deer", "location": "Washington state", "duration": 10}}, {"ecological_impact.analyze": {"species": "deer", "ecosystem": "woodland", "location": "Washington state"}}], "possible_answer": [{"wildlife_population.assess_growth": {"species": ["deer", "Deer"], "location": ["Washington state", "WA", "Washington"], "duration": [10]}}]}
{"id": "multiple_26", "model_name": "Salesforce_xLAM-7b-r", "test_category": "multiple", "valid": false, "error": ["Wrong number of functions."], "error_type": "multiple_function_checker:wrong_count", "prompt": {"id": "multiple_26", "question": [[{"role": "user", "content": "Find out the rewards for playing Fortnite on Playstation platform with different missions and trophies"}]], "function": [{"name": "game_scores.get", "description": "Retrieve scores and rankings based on player\u2019s performance in a certain game.", "parameters": {"type": "dict", "properties": {"game": {"type": "string", "description": "The name of the game."}, "platform": {"type": "string", "description": "The gaming platform e.g. Xbox, Playstation, PC"}, "level": {"type": "integer", "description": "The level of the game for which you want to retrieve the scores."}, "player": {"type": "string", "description": "The name of the player for whom you want to retrieve scores. Default ''", "optional": true}}, "required": ["game", "platform", "level"]}}, {"name": "game_rewards.get", "description": "Retrieve information about different types of rewards that you can receive when playing a certain game.", "parameters": {"type": "dict", "properties": {"game": {"type": "string", "description": "The name of the game."}, "platform": {"type": "string", "description": "The gaming platform e.g. Xbox, Playstation, PC"}, "mission": {"type": "string", "description": "The mission for which you want to know the rewards. Default to ''", "optional": true}, "trophy": {"type": "string", "description": "The trophy level for which you want to know the rewards. Default to ''", "optional": true}}, "required": ["game", "platform"]}}, {"name": "game_missions.list", "description": "List all missions for a certain game.", "parameters": {"type": "dict", "properties": {"game": {"type": "string", "description": "The name of the game."}}, "required": ["game"]}}]}, "model_result_raw": [{"name": "game_rewards.get", "arguments": {"game": "Fortnite", "platform": "Playstation", "mission": "Mission1"}}, {"name": "game_rewards.get", "arguments": {"game": "Fortnite", "platform": "Playstation", "mission": "Mission2"}}, {"name": "game_rewards.get", "arguments": {"game": "Fortnite", "platform": "Playstation", "trophy": "Trophy1"}}, {"name": "game_rewards.get", "arguments": {"game": "Fortnite", "platform": "Playstation", "trophy": "Trophy2"}}], "model_result_decoded": [{"game_rewards.get": {"game": "Fortnite", "platform": "Playstation", "mission": "Mission1"}}, {"game_rewards.get": {"game": "Fortnite", "platform": "Playstation", "mission": "Mission2"}}, {"game_rewards.get": {"game": "Fortnite", "platform": "Playstation", "trophy": "Trophy1"}}, {"game_rewards.get": {"game": "Fortnite", "platform": "Playstation", "trophy": "Trophy2"}}], "possible_answer": [{"game_rewards.get": {"game": ["Fortnite"], "platform": ["Playstation", "PS"], "mission": [""], "trophy": [""]}}]}
{"id": "multiple_49", "model_name": "Salesforce_xLAM-7b-r", "test_category": "multiple", "valid": false, "error": ["Invalid value for parameter 'annual_rate': 0.025. Expected one of [2.5]."], "error_type": "value_error:others", "prompt": {"id": "multiple_49", "question": [[{"role": "user", "content": "Calculate the compound interest for an amount of 1500 for a duration of 2 years with an annual interest rate of 2.5%."}]], "function": [{"name": "calc_Compound_Interest", "description": "Compute compound interest.", "parameters": {"type": "dict", "properties": {"principle_amount": {"type": "integer", "description": "The principle amount that is invested."}, "duration": {"type": "integer", "description": "Duration of time period in years."}, "annual_rate": {"type": "float", "description": "Interest rate in percentage."}, "compound_freq": {"type": "integer", "default": 1, "description": "The number of times that interest is compounded per unit time."}}, "required": ["principle_amount", "duration", "annual_rate"]}}, {"name": "future_value", "description": "Calculates the future value of an investment given an interest rate and time period.", "parameters": {"type": "dict", "properties": {"initial_investment": {"type": "float", "description": "The initial investment amount."}, "interest_rate": {"type": "float", "description": "The annual interest rate (as a decimal)."}, "time": {"type": "integer", "description": "The number of time periods the money is invested for."}, "num_compoundings": {"type": "integer", "default": 1, "description": "The number of times that interest is compounded per time period."}}, "required": ["initial_investment", "interest_rate", "time"]}}, {"name": "calc_Simple_Interest", "description": "Compute simple interest.", "parameters": {"type": "dict", "properties": {"principle_amount": {"type": "float", "description": "The principle amount that is invested."}, "duration": {"type": "float", "description": "Duration of time period in years."}, "annual_rate": {"type": "float", "description": "Interest rate in percentage."}}, "required": ["principle_amount", "duration", "annual_rate"]}}]}, "model_result_raw": [{"name": "calc_Compound_Interest", "arguments": {"principle_amount": 1500, "duration": 2, "annual_rate": 0.025, "compound_freq": 1}}], "model_result_decoded": [{"calc_Compound_Interest": {"principle_amount": 1500, "duration": 2, "annual_rate": 0.025, "compound_freq": 1}}], "possible_answer": [{"calc_Compound_Interest": {"principle_amount": [1500], "duration": [2], "annual_rate": [2.5], "compound_freq": ["", 1]}}]}
{"id": "multiple_51", "model_name": "Salesforce_xLAM-7b-r", "test_category": "multiple", "valid": false, "error": ["Missing required parameter: 'sides_per_die'."], "error_type": "simple_function_checker:missing_required", "prompt": {"id": "multiple_51", "question": [[{"role": "user", "content": "Calculate the probability of rolling a sum of 7 on a roll of two dice."}]], "function": [{"name": "dice_roll_probability", "description": "Calculate the probability of a specific sum appearing from rolling two dice.", "parameters": {"type": "dict", "properties": {"desired_sum": {"type": "integer", "description": "The sum for which to calculate the probability."}, "n_rolls": {"type": "integer", "description": "Number of dice to be rolled. Default is 1", "optional": true}, "sides_per_die": {"type": "integer", "description": "Number of sides on each die."}}, "required": ["desired_sum", "sides_per_die"]}}, {"name": "flip_coin_probability", "description": "Calculate the probability of a specific outcome appearing from flipping a coin.", "parameters": {"type": "dict", "properties": {"desired_outcome": {"type": "string", "description": "The outcome for which to calculate the probability."}, "n_flips": {"type": "integer", "description": "Number of coins to be flipped. Default 1", "optional": true}}, "required": ["desired_outcome"]}}, {"name": "shuffle_card_probability", "description": "Calculate the probability of a specific card appearing from a shuffled deck.", "parameters": {"type": "dict", "properties": {"desired_card": {"type": "string", "description": "The card for which to calculate the probability."}, "n_decks": {"type": "integer", "description": "Number of decks to shuffle. Default 1", "optional": true}}, "required": ["desired_card"]}}]}, "model_result_raw": [{"name": "dice_roll_probability", "arguments": {"desired_sum": 7, "n_rolls": 2}}], "model_result_decoded": [{"dice_roll_probability": {"desired_sum": 7, "n_rolls": 2}}], "possible_answer": [{"dice_roll_probability": {"desired_sum": [7], "sides_per_die": [6], "n_rolls": [2]}}]}
{"id": "multiple_80", "model_name": "Salesforce_xLAM-7b-r", "test_category": "multiple", "valid": false, "error": ["Invalid value for parameter 'services': ['Guitar Lessons', 'Violin Lessons']. Expected one of [['Violin Lessons']]."], "error_type": "value_error:list/tuple", "prompt": {"id": "multiple_80", "question": [[{"role": "user", "content": "Find a local guitar shop that also offers violin lessons in Nashville."}]], "function": [{"name": "music_shop.find_nearby", "description": "Locate nearby music shops based on specific criteria like instrument lessons availability.", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "The city and state, e.g. Nashville, TN"}, "services": {"type": "array", "items": {"type": "string", "enum": ["Guitar Lessons", "Violin Lessons", "Piano Lessons", "Ukulele Lessons"]}, "description": "Types of instrument lessons offered in the shop. Default empty array"}, "instruments": {"type": "array", "items": {"type": "string", "enum": ["Guitars", "Violins", "Pianos", "Drums"]}, "description": "Types of instruments sold in the shop. Default empty array"}}, "required": ["location"]}}, {"name": "gym.find_nearby", "description": "Locate nearby gyms based on specific criteria like types of fitness classes availability.", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "The city and state, e.g. Nashville, TN"}, "classes": {"type": "array", "items": {"type": "string", "enum": ["Yoga", "Spin", "Zumba", "CrossFit"]}, "description": "Types of fitness classes offered in the gym. Default empty array"}, "equipment": {"type": "array", "items": {"type": "string", "enum": ["Treadmills", "Ellipticals", "Weight Machines", "Free Weights"]}, "description": "Types of gym equipment available. Default empty array"}}, "required": ["location"]}}]}, "model_result_raw": [{"name": "music_shop.find_nearby", "arguments": {"location": "Nashville, TN", "services": ["Guitar Lessons", "Violin Lessons"], "instruments": []}}], "model_result_decoded": [{"music_shop.find_nearby": {"location": "Nashville, TN", "services": ["Guitar Lessons", "Violin Lessons"], "instruments": []}}], "possible_answer": [{"music_shop.find_nearby": {"location": ["Nashville, TN", "Nashville"], "services": [["Violin Lessons"]], "instruments": [["Guitars"]]}}]}
{"id": "multiple_93", "model_name": "Salesforce_xLAM-7b-r", "test_category": "multiple", "valid": false, "error": ["Invalid value for parameter 'location': 'Marriott hotel, New York'. Expected one of ['New York', 'New York, NY', 'NYC']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "multiple_93", "question": [[{"role": "user", "content": "Book a deluxe room for 2 nights at the Marriott hotel in New York and add breakfast as an extra service"}]], "function": [{"name": "car.rental", "description": "Rent a car at the specified location for a specific number of days", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "Location of the car rental."}, "days": {"type": "integer", "description": "Number of days for which to rent the car."}, "car_type": {"type": "string", "description": "Type of the car to rent."}, "pick_up": {"type": "string", "description": "Location of where to pick up the car. Default ''"}}, "required": ["location", "days", "car_type"]}}, {"name": "hotel.book", "description": "Book a hotel room given the location, room type, and number of nights and additional services", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "Location of the hotel."}, "roomType": {"type": "string", "description": "Type of the room to be booked."}, "nights": {"type": "integer", "description": "Number of nights to book the room for."}, "additional_services": {"type": "array", "items": {"type": "string", "description": "Additonal services that can be booked.", "enum": ["breakfast", "parking", "spa"]}, "description": "Additional services to be added. Default empty array"}}, "required": ["location", "roomType", "nights"]}}]}, "model_result_raw": [{"name": "hotel.book", "arguments": {"location": "Marriott hotel, New York", "roomType": "deluxe", "nights": 2, "additional_services": ["breakfast"]}}], "model_result_decoded": [{"hotel.book": {"location": "Marriott hotel, New York", "roomType": "deluxe", "nights": 2, "additional_services": ["breakfast"]}}], "possible_answer": [{"hotel.book": {"location": ["New York", "New York, NY", "NYC"], "roomType": ["deluxe", "Deluxe"], "nights": [2], "additional_services": [["breakfast"]]}}]}
{"id": "multiple_129", "model_name": "Salesforce_xLAM-7b-r", "test_category": "multiple", "valid": false, "error": ["Invalid value for parameter 'annual_rate': 0.05. Expected one of [5.0]."], "error_type": "value_error:others", "prompt": {"id": "multiple_129", "question": [[{"role": "user", "content": "Find the compound interest for an investment of $10000 with an annual interest rate of 5% compounded monthly for 5 years."}]], "function": [{"name": "lawsuits_search", "description": "Search for lawsuits against a specific company within a specific time and location.", "parameters": {"type": "dict", "properties": {"company_name": {"type": "string", "description": "The name of the company."}, "location": {"type": "string", "description": "The location where the lawsuit was filed."}, "year": {"type": "integer", "description": "The year when the lawsuit was filed."}, "case_type": {"type": "string", "description": "The type of the case. Options include: 'civil', 'criminal', 'small_claims', etc. If not specified, search for all types. Default is 'all'"}}, "required": ["company_name", "location", "year"]}}, {"name": "compound_interest", "description": "Calculate compound interest for a certain time period.", "parameters": {"type": "dict", "properties": {"principal": {"type": "integer", "description": "The initial amount of money that was invested or loaned out."}, "annual_rate": {"type": "float", "description": "The interest rate for a year as a percentage."}, "compounding_freq": {"type": "string", "enum": ["monthly", "quarterly", "annually"], "description": "The number of times that interest is compounded per unit period."}, "time_in_years": {"type": "integer", "description": "The time the money is invested for in years."}}, "required": ["principal", "annual_rate", "compounding_freq", "time_in_years"]}}]}, "model_result_raw": [{"name": "compound_interest", "arguments": {"principal": 10000, "annual_rate": 0.05, "compounding_freq": "monthly", "time_in_years": 5}}], "model_result_decoded": [{"compound_interest": {"principal": 10000, "annual_rate": 0.05, "compounding_freq": "monthly", "time_in_years": 5}}], "possible_answer": [{"compound_interest": {"principal": [10000], "annual_rate": [5.0], "compounding_freq": ["monthly"], "time_in_years": [5]}}]}
{"id": "multiple_134", "model_name": "Salesforce_xLAM-7b-r", "test_category": "multiple", "valid": false, "error": ["Optional parameter 'details' not provided and not marked as optional."], "error_type": "simple_function_checker:missing_optional", "prompt": {"id": "multiple_134", "question": [[{"role": "user", "content": "Look up details of a felony crime record for case number CA123456 in San Diego County"}]], "function": [{"name": "calculate_density", "description": "Calculate the population density of a specific country in a specific year.", "parameters": {"type": "dict", "properties": {"country": {"type": "string", "description": "The country for which the density needs to be calculated."}, "year": {"type": "string", "description": "The year in which the density is to be calculated."}, "population": {"type": "integer", "description": "The population of the country."}, "land_area": {"type": "float", "description": "The land area of the country in square kilometers."}}, "required": ["country", "year", "population", "land_area"]}}, {"name": "crime_record.get_record", "description": "Retrieve detailed felony crime records using a specific case number and location.", "parameters": {"type": "dict", "properties": {"case_number": {"type": "string", "description": "The case number related to the crime."}, "county": {"type": "string", "description": "The county in which the crime occurred."}, "details": {"type": "boolean", "description": "To get a detailed report, set as true. Defaults to false."}}, "required": ["case_number", "county"]}}, {"name": "get_highest_scoring_player", "description": "Retrieve the highest scoring player in a specific game and season.", "parameters": {"type": "dict", "properties": {"game": {"type": "string", "description": "The game in which you want to find the highest scoring player."}, "season": {"type": "string", "description": "The season during which the high score was achieved."}, "region": {"type": "string", "description": "The geographical region in which the game is being played (Optional). Defaults to 'USA'"}}, "required": ["game", "season"]}}, {"name": "calculate_compound_interest", "description": "Calculates the compound interest of an investment over a given time period.", "parameters": {"type": "dict", "properties": {"principle": {"type": "float", "description": "The initial amount of the investment."}, "interest_rate": {"type": "float", "description": "The yearly interest rate of the investment."}, "time": {"type": "integer", "description": "The time, in years, the money is invested or borrowed for."}, "compounds_per_year": {"type": "integer", "description": "The number of times the interest is compounded per year. Default is 1 (interest is compounded yearly)."}}, "required": ["principle", "interest_rate", "time"]}}]}, "model_result_raw": [{"name": "crime_record.get_record", "arguments": {"case_number": "CA123456", "county": "San Diego"}}], "model_result_decoded": [{"crime_record.get_record": {"case_number": "CA123456", "county": "San Diego"}}], "possible_answer": [{"crime_record.get_record": {"case_number": ["CA123456"], "county": ["San Diego", "San Diego County"], "details": [true]}}]}
{"id": "multiple_179", "model_name": "Salesforce_xLAM-7b-r", "test_category": "multiple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. string indices must be integers, not 'str'"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "multiple_179", "question": [[{"role": "user", "content": "What is the probability of getting a full house in poker?"}]], "function": [{"name": "poker_probability.full_house", "description": "Calculate the probability of getting a full house in a poker game.", "parameters": {"type": "dict", "properties": {"deck_size": {"type": "integer", "description": "The size of the deck. Default is 52."}, "hand_size": {"type": "integer", "description": "The size of the hand. Default is 5."}}, "required": ["deck_size", "hand_size"]}}, {"name": "hospital.locate", "description": "Locate nearby hospitals based on location and radius. Options to include specific departments are available.", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "The city and state, e.g. Denver, CO"}, "radius": {"type": "integer", "description": "The radius within which you want to find the hospital in kms."}, "department": {"type": "string", "description": "Specific department within the hospital. Default is ''.", "enum": ["General Medicine", "Emergency", "Pediatrics", "Cardiology", "Orthopedics"]}}, "required": ["location", "radius"]}}, {"name": "find_recipe", "description": "Find a recipe based on the dietary restrictions, recipe type, and time constraints.", "parameters": {"type": "dict", "properties": {"dietary_restrictions": {"type": "string", "description": "Dietary restrictions e.g. vegan, vegetarian, gluten free, dairy free."}, "recipe_type": {"type": "string", "description": "Type of the recipe. E.g. dessert, main course, breakfast."}, "time": {"type": "integer", "description": "Time limit in minutes to prep the meal."}}, "required": ["dietary_restrictions", "recipe_type", "time"]}}]}, "model_result_raw": "What is the probability of getting a full house in poker?", "possible_answer": [{"poker_probability.full_house": {"deck_size": [52], "hand_size": [5]}}]}