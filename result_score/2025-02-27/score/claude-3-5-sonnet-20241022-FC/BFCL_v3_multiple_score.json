{"accuracy": 0.945, "correct_count": 189, "total_count": 200}
{"id": "multiple_10", "model_name": "claude-3-5-sonnet-20241022-FC", "test_category": "multiple", "valid": false, "error": ["Function name 'database_modify_columns' not found in model output."], "error_type": "simple_function_checker:wrong_func_name", "prompt": {"id": "multiple_10", "question": [[{"role": "user", "content": "I need to delete some columns from my employees database on personal_data table. I want to remove their email addresses and social security numbers to respect privacy."}]], "function": [{"name": "database.modify_columns", "description": "This function allows deletion or addition of columns in a database", "parameters": {"type": "dict", "properties": {"db_name": {"type": "string", "description": "The name of the database to modify."}, "table": {"type": "string", "description": "The name of the table to modify."}, "operation": {"type": "string", "description": "The operation to carry out on the table. Can be 'delete' or 'add'."}, "columns": {"type": "array", "description": "List of the columns to add or delete from the table.", "items": {"type": "string"}}}, "required": ["db_name", "table", "operation", "columns"]}}, {"name": "database.create_backup", "description": "This function creates a backup of the database before modification", "parameters": {"type": "dict", "properties": {"db_name": {"type": "string", "description": "The name of the database to create a backup of."}, "backup_location": {"type": "string", "description": "The file path where the backup should be stored."}, "timestamp": {"type": "boolean", "description": "Option to append a timestamp to the backup file name.", "default": "False"}}, "required": ["db_name", "backup_location"]}}]}, "model_result_raw": [{"database_create_backup": "{\"db_name\": \"employees\", \"backup_location\": \"./employees_backup\"}"}], "model_result_decoded": [{"database_create_backup": {"db_name": "employees", "backup_location": "./employees_backup"}}], "possible_answer": [{"database.modify_columns": {"db_name": ["employees"], "table": ["personal_data"], "operation": ["delete"], "columns": [["email", "ssn"], ["ssn", "email"], ["email", "social_security_number"], ["social_security_number", "email"], ["email", "social security number"], ["social security number", "email"]]}}]}
{"id": "multiple_58", "model_name": "claude-3-5-sonnet-20241022-FC", "test_category": "multiple", "valid": false, "error": ["Invalid value for parameter 'expertise': 'Marriage'. Expected one of ['Divorce']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "multiple_58", "question": [[{"role": "user", "content": "Search for divorce law specialists in Los Angeles"}]], "function": [{"name": "doctor.search", "description": "Search for a doctor based on area of expertise and location", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "The city and state, e.g. Los Angeles, CA"}, "specialization": {"type": "string", "description": "Medical specialization. For example, 'Cardiology', 'Orthopedics', 'Gynecology'."}}, "required": ["location", "specialization"]}}, {"name": "lawyer.search", "description": "Search for a lawyer based on area of expertise and location", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "The city and state, e.g. Los Angeles, CA"}, "expertise": {"type": "string", "description": "Area of legal expertise. For example, 'Marriage', 'Criminal', 'Business'."}}, "required": ["location", "expertise"]}}]}, "model_result_raw": [{"lawyer_search": "{\"location\": \"Los Angeles, CA\", \"expertise\": \"Marriage\"}"}], "model_result_decoded": [{"lawyer_search": {"location": "Los Angeles, CA", "expertise": "Marriage"}}], "possible_answer": [{"lawyer.search": {"location": ["Los Angeles", "Los Angeles, CA", "LA"], "expertise": ["Divorce"]}}]}
{"id": "multiple_61", "model_name": "claude-3-5-sonnet-20241022-FC", "test_category": "multiple", "valid": false, "error": ["Invalid value for parameter 'specialization': 'residential design'. Expected one of ['small space garden design']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "multiple_61", "question": [[{"role": "user", "content": "Find a Landscape Architect who is experienced 5 years in small space garden design in Portland"}]], "function": [{"name": "home_renovation_expert.find_specialty", "description": "Search for a home renovation expert based on the location and specialization", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "City and state where the professional is based, e.g. Portland, OR."}, "specialization": {"type": "string", "description": "A specific area of expertise, such as kitchen or bathroom renovation."}, "years_experience": {"type": "integer", "description": "Number of years the professional has been practicing in their field. (optional)", "default": 0}}, "required": ["location", "specialization"]}}, {"name": "landscape_architect.find_specialty", "description": "Search for a landscape architect based on the location and specialization", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "City and state where the professional is based, e.g. Portland, OR."}, "specialization": {"type": "string", "description": "A specific area of expertise. Common areas include residential design, commercial design, urban design, and park design."}, "years_experience": {"type": "integer", "description": "Number of years the professional has been practicing in their field. (optional)", "default": 0}}, "required": ["location", "specialization"]}}]}, "model_result_raw": [{"landscape_architect_find_specialty": "{\"location\": \"Portland, OR\", \"specialization\": \"residential design\", \"years_experience\": 5}"}], "model_result_decoded": [{"landscape_architect_find_specialty": {"location": "Portland, OR", "specialization": "residential design", "years_experience": 5}}], "possible_answer": [{"landscape_architect.find_specialty": {"location": ["Portland", "Portland, OR"], "specialization": ["small space garden design"], "years_experience": [5]}}]}
{"id": "multiple_74", "model_name": "claude-3-5-sonnet-20241022-FC", "test_category": "multiple", "valid": false, "error": ["Invalid value for parameter 'artist': 'Vincent van Gogh'. Expected one of ['Van Gogh']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "multiple_74", "question": [[{"role": "user", "content": "Find the price of Van Gogh's painting 'Starry Night' on all auction platforms."}]], "function": [{"name": "art_auction.fetch_artwork_price", "description": "Fetch the price of a specific artwork on the auction platform.", "parameters": {"type": "dict", "properties": {"artwork_name": {"type": "string", "description": "The name of the artwork to be searched."}, "artist": {"type": "string", "description": "The artist's name to ensure the precise artwork is fetched."}, "platform": {"type": "string", "description": "The platform where the artwork's price should be fetched from.", "default": "all"}}, "required": ["artwork_name", "artist"]}}, {"name": "library.search_book", "description": "Search for a specific book in the library.", "parameters": {"type": "dict", "properties": {"title": {"type": "string", "description": "The title of the book to be searched."}, "author": {"type": "string", "description": "The author of the book to ensure the precise book is fetched."}, "platform": {"type": "string", "description": "The library where the book should be fetched from.", "default": "all"}}, "required": ["title", "author"]}}]}, "model_result_raw": [{"art_auction_fetch_artwork_price": "{\"artwork_name\": \"Starry Night\", \"artist\": \"Vincent van Gogh\"}"}], "model_result_decoded": [{"art_auction_fetch_artwork_price": {"artwork_name": "Starry Night", "artist": "Vincent van Gogh"}}], "possible_answer": [{"art_auction.fetch_artwork_price": {"artwork_name": ["Starry Night"], "artist": ["Van Gogh"], "platform": ["all", ""]}}]}
{"id": "multiple_91", "model_name": "claude-3-5-sonnet-20241022-FC", "test_category": "multiple", "valid": false, "error": ["Invalid value for parameter 'ingredientLimit': 5. Expected one of [4]."], "error_type": "value_error:others", "prompt": {"id": "multiple_91", "question": [[{"role": "user", "content": "Can I find a good cooking recipe for apple pie using less than 5 ingredients?"}]], "function": [{"name": "restaurant.find", "description": "Locate restaurants based on specific criteria such as cuisine and price range", "parameters": {"type": "dict", "properties": {"cuisine": {"type": "string", "description": "The type of cuisine preferred."}, "price": {"type": "array", "items": {"type": "string"}, "description": "Price range of the restaurant in format ['low', 'mid', 'high']. Default ['low', 'mid', 'high']"}}, "required": ["cuisine"]}}, {"name": "recipe.find", "description": "Locate cooking recipes based on specific criteria such as main ingredient and number of ingredients", "parameters": {"type": "dict", "properties": {"mainIngredient": {"type": "string", "description": "Main ingredient for the recipe."}, "ingredientLimit": {"type": "integer", "description": "Max number of ingredients the recipe should use."}}, "required": ["mainIngredient", "ingredientLimit"]}}]}, "model_result_raw": [{"recipe_find": "{\"mainIngredient\": \"apple\", \"ingredientLimit\": 5}"}], "model_result_decoded": [{"recipe_find": {"mainIngredient": "apple", "ingredientLimit": 5}}], "possible_answer": [{"recipe.find": {"mainIngredient": ["apple pie", "apple"], "ingredientLimit": [4]}}]}
{"id": "multiple_94", "model_name": "claude-3-5-sonnet-20241022-FC", "test_category": "multiple", "valid": false, "error": ["Invalid value for parameter 'roomType': 'Suite'. Expected one of ['suite with queen size bed']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "multiple_94", "question": [[{"role": "user", "content": "I want to book a suite with queen size bed for 3 nights in Hilton New York. Can you find the pricing for me?"}]], "function": [{"name": "hotel_room_pricing.get", "description": "Get pricing for a specific type of hotel room for specified number of nights.", "parameters": {"type": "dict", "properties": {"hotelName": {"type": "string", "description": "The name of the hotel e.g. Hilton New York"}, "roomType": {"type": "string", "description": "Type of the room to be booked."}, "nights": {"type": "integer", "description": "Number of nights to book the room for."}}, "required": ["hotelName", "roomType", "nights"]}}, {"name": "car_rental_pricing.get", "description": "Get pricing for a specific type of rental car for a specified number of days.", "parameters": {"type": "dict", "properties": {"rentalCompany": {"type": "string", "description": "The name of the rental company."}, "carType": {"type": "string", "description": "Type of the car to be rented."}, "days": {"type": "integer", "description": "Number of days to rent the car."}}, "required": ["rentalCompany", "carType", "days"]}}, {"name": "flight_ticket_pricing.get", "description": "Get pricing for a specific type of flight ticket for specified number of passengers.", "parameters": {"type": "dict", "properties": {"airline": {"type": "string", "description": "The name of the airline."}, "flightClass": {"type": "string", "description": "Class of the flight."}, "passengers": {"type": "integer", "description": "Number of passengers."}}, "required": ["airline", "flightClass", "passengers"]}}]}, "model_result_raw": [{"hotel_room_pricing_get": "{\"hotelName\": \"Hilton New York\", \"roomType\": \"Suite\", \"nights\": 3}"}], "model_result_decoded": [{"hotel_room_pricing_get": {"hotelName": "Hilton New York", "roomType": "Suite", "nights": 3}}], "possible_answer": [{"hotel_room_pricing.get": {"hotelName": ["Hilton New York"], "roomType": ["suite with queen size bed"], "nights": [3]}}]}
{"id": "multiple_138", "model_name": "claude-3-5-sonnet-20241022-FC", "test_category": "multiple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. 'str' object has no attribute 'keys'"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "multiple_138", "question": [[{"role": "user", "content": "How to obtain the detailed case information of the R vs Adams legal case?"}]], "function": [{"name": "park_information", "description": "Retrieve the basic information such as elevation and area of a national park.", "parameters": {"type": "dict", "properties": {"park_name": {"type": "string", "description": "The name of the national park."}, "information": {"type": "array", "items": {"type": "string", "enum": ["Elevation", "Area", "Location", "Established Year"]}, "description": "The type of information you want about the park."}}, "required": ["park_name", "information"]}}, {"name": "legal_case.fetch", "description": "Fetch detailed legal case information from database.", "parameters": {"type": "dict", "properties": {"case_id": {"type": "string", "description": "The ID of the legal case."}, "details": {"type": "boolean", "description": "True if need the detail info. Default is false."}}, "required": ["case_id", "details"]}}, {"name": "calculate_stock_return", "description": "Calculate the projected return of a stock investment given the investment amount, the annual growth rate and holding period in years.", "parameters": {"type": "dict", "properties": {"investment_amount": {"type": "float", "description": "The amount of money to invest."}, "annual_growth_rate": {"type": "float", "description": "The expected annual growth rate of the stock."}, "holding_period": {"type": "integer", "description": "The number of years you intend to hold the stock."}, "include_dividends": {"type": "boolean", "description": "Optional. True if the calculation should take into account potential dividends. Default is false."}}, "required": ["investment_amount", "annual_growth_rate", "holding_period"]}}]}, "model_result_raw": ["I notice you want to get detailed case information, but I'll need the specific case ID to use the legal_case_fetch function. The case name \"R vs Adams\" alone is not sufficient - I need the case ID which is usually an alphanumeric identifier. Could you please provide the case ID for the R vs Adams case?\n\nOnce you provide the case ID, I can help you retrieve the detailed information using the legal_case_fetch function."], "possible_answer": [{"legal_case.fetch": {"case_id": ["R vs Adams", "R_vs_Adams"], "details": [true]}}]}
{"id": "multiple_151", "model_name": "claude-3-5-sonnet-20241022-FC", "test_category": "multiple", "valid": false, "error": ["Invalid value for parameter 'sub_topics': ['behavior', 'group dynamics']. Expected one of [['behaviour', 'group dynamics'], ['group dynamics', 'behaviour']]."], "error_type": "value_error:list/tuple", "prompt": {"id": "multiple_151", "question": [[{"role": "user", "content": "Find the most followed person on twitter who tweets about psychology related to behaviour and group dynamics."}]], "function": [{"name": "social_media_analytics.most_followed", "description": "Find the most followed Twitter user related to certain topics.", "parameters": {"type": "dict", "properties": {"topic": {"type": "string", "description": "The main topic of interest."}, "sub_topics": {"type": "array", "items": {"type": "string"}, "description": "Sub-topics related to main topic, Optional. Default is an empty list."}, "region": {"type": "string", "description": "Region of interest for twitter search, Optional. Default is 'global'."}}, "required": ["topic"]}}, {"name": "calculate_probability", "description": "Calculate the probability of an event.", "parameters": {"type": "dict", "properties": {"total_outcomes": {"type": "integer", "description": "Total number of possible outcomes."}, "favorable_outcomes": {"type": "integer", "description": "Number of outcomes considered as 'successful'."}, "round_to": {"type": "integer", "description": "Number of decimal places to round the result to.", "default": 2}}, "required": ["total_outcomes", "favorable_outcomes"]}}, {"name": "concert_info.get", "description": "Retrieve information about concerts based on specific genre, location and date.", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "The city where the concert will take place."}, "date": {"type": "string", "description": "Time frame to get the concert for."}, "genre": {"type": "string", "description": "Genre of the concert.", "enum": ["Pop", "Rock", "Country", "Classical", "Electronic", "Hip-Hop"]}}, "required": ["location", "date", "genre"]}}]}, "model_result_raw": [{"social_media_analytics_most_followed": "{\"topic\": \"psychology\", \"sub_topics\": [\"behavior\", \"group dynamics\"]}"}], "model_result_decoded": [{"social_media_analytics_most_followed": {"topic": "psychology", "sub_topics": ["behavior", "group dynamics"]}}], "possible_answer": [{"social_media_analytics.most_followed": {"topic": ["psychology", "Psychology"], "sub_topics": [["behaviour", "group dynamics"], ["group dynamics", "behaviour"]], "region": ["", "global"]}}]}
{"id": "multiple_153", "model_name": "claude-3-5-sonnet-20241022-FC", "test_category": "multiple", "valid": false, "error": ["Invalid value for parameter 'event': 'Treaty of Lisbon signing'. Expected one of ['Treaty of Lisbon', 'Signing of the Treaty of Lisbon']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "multiple_153", "question": [[{"role": "user", "content": "When was the signing of the Treaty of Lisbon?"}]], "function": [{"name": "locate_tallest_mountains", "description": "Find the tallest mountains within a specified radius of a location.", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "The city from which to calculate distance."}, "radius": {"type": "float", "description": "The radius within which to find mountains, measured in kilometers."}, "amount": {"type": "integer", "description": "The number of mountains to find, listed from tallest to smallest."}}, "required": ["location", "radius", "amount"]}}, {"name": "calculate_entropy_change", "description": "Calculate the entropy change for an isothermal and reversible process.", "parameters": {"type": "dict", "properties": {"initial_temp": {"type": "float", "description": "The initial temperature in Kelvin."}, "final_temp": {"type": "float", "description": "The final temperature in Kelvin."}, "heat_capacity": {"type": "float", "description": "The heat capacity in J/K."}, "isothermal": {"type": "boolean", "description": "Whether the process is isothermal. Default is True."}}, "required": ["initial_temp", "final_temp", "heat_capacity"]}}, {"name": "get_event_date", "description": "Retrieve the date of a historical event.", "parameters": {"type": "dict", "properties": {"event": {"type": "string", "description": "The name of the historical event."}, "location": {"type": "string", "description": "Location where the event took place. Defaults to global if not specified"}}, "required": ["event"]}}]}, "model_result_raw": [{"get_event_date": "{\"event\": \"Treaty of Lisbon signing\", \"location\": \"Lisbon\"}"}], "model_result_decoded": [{"get_event_date": {"event": "Treaty of Lisbon signing", "location": "Lisbon"}}], "possible_answer": [{"get_event_date": {"event": ["Treaty of Lisbon", "Signing of the Treaty of Lisbon"], "location": ["", "global", "Lisbon", "Lisbon, Portugal"]}}]}
{"id": "multiple_160", "model_name": "claude-3-5-sonnet-20241022-FC", "test_category": "multiple", "valid": false, "error": ["Invalid value for parameter 'artist_name': 'Jaume Plensa'. Expected one of ['James Plensa']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "multiple_160", "question": [[{"role": "user", "content": "Find me the most recent art sculpture by James Plensa with detailed description."}]], "function": [{"name": "get_zodiac_compatibility", "description": "Retrieve the compatibility score between two Zodiac signs.", "parameters": {"type": "dict", "properties": {"sign1": {"type": "string", "description": "The first Zodiac sign."}, "sign2": {"type": "string", "description": "The second Zodiac sign."}, "scale": {"type": "string", "enum": ["percentage", "0-10 scale"], "description": "The scale on which compatibility should be shown. Default is 'percentage'."}}, "required": ["sign1", "sign2"]}}, {"name": "local_nursery.find", "description": "Locate local nurseries based on location and plant types availability.", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "The city or locality where the nursery needs to be located."}, "plant_types": {"type": "array", "items": {"type": "string", "enum": ["Annual", "Perennial", "Shrub", "Tree", "Herbs", "Fruits"]}, "description": "Type of plants the nursery should provide."}}, "required": ["location", "plant_types"]}}, {"name": "get_sculpture_info", "description": "Retrieves the most recent artwork by a specified artist with its detailed description.", "parameters": {"type": "dict", "properties": {"artist_name": {"type": "string", "description": "The name of the artist."}, "detail": {"type": "boolean", "description": "If True, it provides detailed description of the sculpture. Defaults to False."}}, "required": ["artist_name"]}}, {"name": "monarch.getMonarchOfYear", "description": "Retrieve the monarch of a specific location during a specified year.", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "The location (e.g., country) whose monarch needs to be found."}, "year": {"type": "integer", "description": "The year to search the monarch."}, "fullName": {"type": "boolean", "default": "false", "description": "If true, returns the full name and title of the monarch."}}, "required": ["location", "year"]}}]}, "model_result_raw": [{"get_sculpture_info": "{\"artist_name\": \"Jaume Plensa\", \"detail\": true}"}], "model_result_decoded": [{"get_sculpture_info": {"artist_name": "Jaume Plensa", "detail": true}}], "possible_answer": [{"get_sculpture_info": {"artist_name": ["James Plensa"], "detail": [true]}}]}
{"id": "multiple_191", "model_name": "claude-3-5-sonnet-20241022-FC", "test_category": "multiple", "valid": false, "error": ["Invalid value for parameter 'room_type': 'luxury room'. Expected one of ['luxury', 'Luxury']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "multiple_191", "question": [[{"role": "user", "content": "Book a luxury room in Hotel Paradise, Las Vegas, with a city view for 3 days starting from May 12, 2022."}]], "function": [{"name": "random.normalvariate", "description": "Generates a random number from a normal distribution given the mean and standard deviation.", "parameters": {"type": "dict", "properties": {"mu": {"type": "float", "description": "Mean of the normal distribution."}, "sigma": {"type": "float", "description": "Standard deviation of the normal distribution."}}, "required": ["mu", "sigma"]}}, {"name": "get_personality_traits", "description": "Retrieve the personality traits for a specific personality type, including their strengths and weaknesses.", "parameters": {"type": "dict", "properties": {"type": {"type": "string", "description": "The personality type."}, "traits": {"type": "array", "items": {"type": "string", "enum": ["strengths", "weaknesses"]}, "description": "List of traits to be retrieved, default is ['strengths', 'weaknesses']."}}, "required": ["type"]}}, {"name": "elephant_population_estimate", "description": "Estimate future population of elephants given current population and growth rate.", "parameters": {"type": "dict", "properties": {"current_population": {"type": "integer", "description": "The current number of elephants."}, "growth_rate": {"type": "float", "description": "The annual population growth rate of elephants."}, "years": {"type": "integer", "description": "The number of years to project the population."}}, "required": ["current_population", "growth_rate", "years"]}}, {"name": "book_hotel", "description": "Book a room in a specific hotel with particular preferences", "parameters": {"type": "dict", "properties": {"hotel_name": {"type": "string", "description": "The name of the hotel."}, "location": {"type": "string", "description": "The location of the hotel."}, "room_type": {"type": "string", "description": "The type of room preferred."}, "start_date": {"type": "string", "description": "The starting date of the stay in format MM-DD-YYYY."}, "stay_duration": {"type": "integer", "description": "The duration of the stay in days."}, "view": {"type": "string", "description": "The preferred view from the room, can be ignored if no preference. If none provided, assumes no preference.", "default": "No preference"}}, "required": ["hotel_name", "location", "room_type", "start_date", "stay_duration"]}}]}, "model_result_raw": [{"book_hotel": "{\"hotel_name\": \"Hotel Paradise\", \"location\": \"Las Vegas\", \"room_type\": \"luxury room\", \"start_date\": \"05-12-2022\", \"stay_duration\": 3, \"view\": \"city view\"}"}], "model_result_decoded": [{"book_hotel": {"hotel_name": "Hotel Paradise", "location": "Las Vegas", "room_type": "luxury room", "start_date": "05-12-2022", "stay_duration": 3, "view": "city view"}}], "possible_answer": [{"book_hotel": {"hotel_name": ["Hotel Paradise"], "location": ["Las Vegas", "Las Vegas, NV", "LV"], "room_type": ["luxury", "Luxury"], "start_date": ["05-12-2022", "2022-05-12", "12/05/2022", "May.12,2022", "May 12, 2022"], "stay_duration": [3], "view": ["city", "city view"]}}]}