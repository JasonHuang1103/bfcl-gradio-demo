{"id": "rest_0", "result": "```json\n[requests.get('https://timezone-by-location.p.rapidapi.com/timezone', params={'lat': 48.8584, 'lon': 2.2945, 'c': 1, 's': 0}, headers={'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'timezone-by-location.p.rapidapi.com'}, timeout=10)]\n```", "input_token_count": 909, "output_token_count": 111, "latency": 3.511335611343384}
{"id": "rest_1", "result": "```json\n[requests.get('https://timezone-by-location.p.rapidapi.com/timezone', params={'lat': 40.7128, 'lon': -74.0060, 'c': 0, 's': 0}, headers={'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'timezone-by-location.p.rapidapi.com'}, timeout=10)]\n```", "input_token_count": 904, "output_token_count": 112, "latency": 3.586733818054199}
{"id": "rest_2", "result": "```json\n[requests.get('https://timezone-by-location.p.rapidapi.com/timezone', params={'lat': 40.712776, 'lon': -74.005974, 'c': 1, 's': 0}, headers={'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'timezone-by-location.p.rapidapi.com'}, timeout=10)]\n```", "input_token_count": 929, "output_token_count": 116, "latency": 3.7419228553771973}
{"id": "rest_3", "result": "```tool_code\n[requests.get('https://timezone-by-location.p.rapidapi.com/timezone?lat=40.712776&lon=-74.005974&c=1&s=1', headers={'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'timezone-by-location.p.rapidapi.com'}, timeout=10),]\n```", "input_token_count": 906, "output_token_count": 110, "latency": 3.4153175354003906}
{"id": "rest_4", "result": "```json\n[requests.get('https://timezone-by-location.p.rapidapi.com/timezone', params={'lat': 40.7128, 'lon': -74.0060, 'c': 1}) , {'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'timezone-by-location.p.rapidapi.com'}]\n```", "input_token_count": 924, "output_token_count": 102, "latency": 3.1543374061584473}
{"id": "rest_5", "result": "```json\n[requests.get('https://timezone-by-location.p.rapidapi.com/timezone', params={'lat': 48.8584, 'lon': 2.2945, 'c': 0, 's': 0, 'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'timezone-by-location.p.rapidapi.com'}, timeout=10)]\n```", "input_token_count": 895, "output_token_count": 110, "latency": 3.4471194744110107}
{"id": "rest_6", "result": "```json\n[requests.get({'url': 'https://covid-193.p.rapidapi.com/statistics', 'headers': {'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'covid-193.p.rapidapi.com'}, 'timeout': 10, 'params': {'country': 'Uganda'}, 'allow_redirects': True, 'stream': False},)]\n```", "input_token_count": 872, "output_token_count": 104, "latency": 3.327765464782715}
{"id": "rest_7", "result": "```json\n[requests.get('https://covid-193.p.rapidapi.com/statistics?country=France', headers={'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'covid-193.p.rapidapi.com'}, timeout=25, params={'country': 'France'}),]\n```", "input_token_count": 854, "output_token_count": 87, "latency": 2.729574680328369}
{"id": "rest_8", "result": "```tool_code\n[requests.get(url='https://covid-193.p.rapidapi.com/statistics', headers={'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'covid-193.p.rapidapi.com'}, params={'country': 'Japan'}, timeout=10, allow_redirects=True)]\n```", "input_token_count": 856, "output_token_count": 92, "latency": 2.8473825454711914}
{"id": "rest_9", "result": "```json\n[requests.get(url='https://covid-193.p.rapidapi.com/statistics', headers={'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'covid-193.p.rapidapi.com'}, timeout=10, params={'country': '[All]'}, allow_redirects=True, stream=False),]\n```", "input_token_count": 850, "output_token_count": 96, "latency": 3.01633620262146}
{"id": "rest_10", "result": "```json\n[requests.get({'url': 'https://covid-193.p.rapidapi.com/statistics', 'headers': {'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'covid-193.p.rapidapi.com'}, 'params': {'country': 'Iran'}, 'timeout': 30}, {'type': 'dict', 'required': ['X-RapidAPI-Key', 'X-RapidAPI-Host', 'country']})\n```", "input_token_count": 849, "output_token_count": 120, "latency": 3.7952706813812256}
{"id": "rest_11", "result": "```json\n[requests.get('https://covid-193.p.rapidapi.com/api-sports/statistics/country/India', headers={'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'covid-193.p.rapidapi.com'}, params={'country': 'India'}, timeout=10),]\n```", "input_token_count": 842, "output_token_count": 91, "latency": 2.783029317855835}
{"id": "rest_12", "result": "```json\n[requests.get(url='https://covid-193.p.rapidapi.com/statistics', headers={'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'covid-193.p.rapidapi.com'}, timeout=5, params={'country': 'China'}, allow_redirects=True, stream=False, verify=True)]\n``` \n", "input_token_count": 860, "output_token_count": 99, "latency": 3.092245101928711}
{"id": "rest_13", "result": "```json\n[requests.get('https://v6.exchangerate-api.com/v6/YOUR-EXCHANGERATE-API-KEY/latest/EUR', params={'base_currency': 'EUR'}),]\n```", "input_token_count": 760, "output_token_count": 53, "latency": 1.5624566078186035}
{"id": "rest_14", "result": "```json\n[requests.get('https://v6.exchangerate-api.com/v6/YOUR-EXCHANGERATE-API-KEY/latest/EUR', params={'base_currency': 'EUR'}),]\n```", "input_token_count": 772, "output_token_count": 53, "latency": 1.5408916473388672}
{"id": "rest_15", "result": "```json\n[requests.get(url='https://v6.exchangerate-api.com/v6/YOUR-EXCHANGERATE-API-KEY/latest/USD', params={'base_currency': 'EUR'}),]\n```", "input_token_count": 760, "output_token_count": 55, "latency": 1.695911169052124}
{"id": "rest_16", "result": "```json\n[requests.get('https://v6.exchangerate-api.com/v6/{YOUR-EXCHANGERATE-API-KEY}/latest/EUR', params={'base_currency': 'EUR'}),]\n```", "input_token_count": 785, "output_token_count": 53, "latency": 1.6417298316955566}
{"id": "rest_17", "result": "```json\n[requests.get('https://v6.exchangerate-api.com/v6/YOUR-EXCHANGERATE-API-KEY/latest/EUR')]\n```", "input_token_count": 772, "output_token_count": 43, "latency": 1.310873031616211}
{"id": "rest_18", "result": "```json\n[requests.get('https://v6.exchangerate-api.com/v6/YOUR-EXCHANGERATE-API-KEY/latest/EUR')]\n```", "input_token_count": 786, "output_token_count": 43, "latency": 1.3356711864471436}
{"id": "rest_19", "result": "```json\n[requests.get(url='https://v6.exchangerate-api.com/v6/YOUR-EXCHANGERATE-API-KEY/latest/EUR', params={'base_currency': 'EUR'}, headers={'Accept': 'application/json'}),]\n```", "input_token_count": 767, "output_token_count": 64, "latency": 1.9463396072387695}
{"id": "rest_20", "result": "```json\n[requests.get('https://v6.exchangerate-api.com/v6/YOUR-EXCHANGERATE-API-KEY/latest/EUR', params={'base_currency': 'EUR'}),]\n```", "input_token_count": 775, "output_token_count": 53, "latency": 1.5552949905395508}
{"id": "rest_21", "result": "```json\n[{'name': 'requests.get', 'description': 'Sends a GET request to the specified URL. Note that the provided function is in Python 3 syntax.', 'parameters': {'type': 'dict', 'properties': {'url': {'type': 'string', 'description': 'To retrieve the latest exchange rates for your chosen base currency against all other currencies supported by the API, substitute `YOUR-API-KEY` with your actual API key and `base_currency` with the ISO 4217 code of your desired base currency. Then, send a GET request to the provided endpoint. This guide helps in using the Standard endpoint of the Exchange Rate API', 'default': 'https://v6.exchangerate-api.com/v6/{YOUR-API-KEY}/latest/{base_currency}'}, 'headers': {'properties': {}, 'type': 'dict', 'required': []}, 'timeout': {'type': 'integer', 'description': 'How many seconds to wait for the server to send data before giving up.'}, 'params': {'properties': {}, 'type': 'dict', 'required': []}, 'allow_redirects': {'type': 'boolean', 'description': 'A Boolean to enable/disable redirection.', 'default': True}, 'auth': {'type': 'tuple', 'description': 'A tuple to enable a certain HTTP authentication.', 'default': 'None', 'items': {'type': 'string'}}, 'cert': {'type': 'string', 'description': 'A String or Tuple specifying a cert file or key.', 'default': 'None'}, 'cookies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of cookies to send with the request.'}, 'proxies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of the protocol to the proxy url.'}, 'stream': {'type': 'boolean', 'description': 'A Boolean indication if the response should be immediately downloaded (False) or streamed (True).', 'default': False}, 'verify': {'type': 'string', 'description': 'A Boolean or a String indication to verify the servers TLS certificate or not.', 'default': True}}, 'required': ['url']}]\n```", "input_token_count": 762, "output_token_count": 483, "latency": 13.405896425247192}
{"id": "rest_22", "result": "```json\n[requests.get(url='https://v6.exchangerate-api.com/v6/{YOUR-EXCHANGERATE-API-KEY}/latest/EUR', params={'base_currency': 'EUR'}, headers={'Accept': 'application/json'}, timeout=10),]\n```", "input_token_count": 769, "output_token_count": 69, "latency": 2.186988353729248}
{"id": "rest_23", "result": "```json\n[{'name': 'requests.get', 'description': 'Sends a GET request to the specified URL. Note that the provided function is in Python 3 syntax.', 'parameters': {'type': 'dict', 'properties': {'url': {'type': 'string', 'description': 'Get tickers for any stock company, ETF, mutual fund, crypto and more', 'default': 'https://yahoo-finance15.p.rapidapi.com/api/v1/markets/search'}, 'headers': {'properties': {'X-RapidAPI-Key': {'type': 'string', 'description': 'The API key for authenticating requests to RapidAPI.'}, 'X-RapidAPI-Host': {'type': 'string', 'description': 'The host domain for the RapidAPI service being accessed.'}}, 'type': 'dict', 'required': ['X-RapidAPI-Key', 'X-RapidAPI-Host']}, 'timeout': {'type': 'integer', 'description': 'How many seconds to wait for the server to send data before giving up.'}, 'params': {'properties': {'search': {'type': 'string', 'description': 'Search query for stock name'}}, 'type': 'dict', 'required': []}, 'allow_redirects': {'type': 'boolean', 'description': 'A Boolean to enable/disable redirection.', 'default': True}, 'auth': {'type': 'tuple', 'description': 'A tuple to enable a certain HTTP authentication.', 'default': 'None', 'items': {'type': 'string'}}, 'cert': {'type': 'string', 'description': 'A String or Tuple specifying a cert file or key.', 'default': 'None'}, 'cookies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of cookies to send with the request.'}, 'proxies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of the protocol to the proxy url.'}, 'stream': {'type': 'boolean', 'description': 'A Boolean indication if the response should be immediately downloaded (False) or streamed (True).', 'default': False}, 'verify': {'type': 'string', 'description': 'A Boolean or a String indication to verify the servers TLS certificate or not.', 'default': True}}, 'required': ['url']}}]\n```", "input_token_count": 823, "output_token_count": 510, "latency": 13.737184286117554}
{"id": "rest_24", "result": "```json\n[requests.get('https://yahoo-finance15.p.rapidapi.com/api/v1/markets/search', headers={'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'yahoo-finance15.p.rapidapi.com'}, params={'search': 'Tesla'}),]\n```", "input_token_count": 829, "output_token_count": 85, "latency": 2.6937015056610107}
{"id": "rest_25", "result": "```json\n[{'name': 'requests.get', 'description': 'Sends a GET request to the specified URL. Note that the provided function is in Python 3 syntax.', 'parameters': {'type': 'dict', 'properties': {'url': {'type': 'string', 'description': 'Get tickers for any stock company, ETF, mutual fund, crypto and more', 'default': 'https://yahoo-finance15.p.rapidapi.com/api/v1/markets/search'}, 'headers': {'properties': {'X-RapidAPI-Key': {'type': 'string', 'description': 'The API key for authenticating requests to RapidAPI.'}, 'X-RapidAPI-Host': {'type': 'string', 'description': 'The host domain for the RapidAPI service being accessed.'}}, 'type': 'dict', 'required': ['X-RapidAPI-Key', 'X-RapidAPI-Host']}, 'timeout': {'type': 'integer', 'description': 'How many seconds to wait for the server to send data before giving up.'}, 'params': {'properties': {'search': {'type': 'string', 'description': 'Search query for stock name'}}, 'type': 'dict', 'required': []}, 'allow_redirects': {'type': 'boolean', 'description': 'A Boolean to enable/disable redirection.', 'default': True}, 'auth': {'type': 'tuple', 'description': 'A tuple to enable a certain HTTP authentication.', 'default': 'None', 'items': {'type': 'string'}}, 'cert': {'type': 'string', 'description': 'A String or Tuple specifying a cert file or key.', 'default': 'None'}, 'cookies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of cookies to send with the request.'}, 'proxies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of the protocol to the proxy url.'}, 'stream': {'type': 'boolean', 'description': 'A Boolean indication if the response should be immediately downloaded (False) or streamed (True).', 'default': False}, 'verify': {'type': 'string', 'description': 'A Boolean or a String indication to verify the servers TLS certificate or not.', 'default': True}}, 'required': ['url']}}]\n```", "input_token_count": 813, "output_token_count": 510, "latency": 13.50735330581665}
{"id": "rest_26", "result": "```json\n[requests.get({'url': 'https://yahoo-finance15.p.rapidapi.com/api/v1/markets/search', 'headers': {'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'yahoo-finance15.p.rapidapi.com'}, 'params': {'search': 'Apple'}})\n```", "input_token_count": 808, "output_token_count": 92, "latency": 2.9824585914611816}
{"id": "rest_27", "result": "```json\n[requests.get(url='https://yahoo-finance15.p.rapidapi.com/api/v1/markets/search', headers={'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'yahoo-finance15.p.rapidapi.com'}, params={'search': 'Tesla'}, timeout=10),]\n```", "input_token_count": 820, "output_token_count": 92, "latency": 2.9728429317474365}
{"id": "rest_28", "result": "```json\n[requests.get('https://yahoo-finance15.p.rapidapi.com/api/v1/markets/search', params={'search': 'Tesla'}), {'name': 'requests.get', 'description': 'Sends a GET request to the specified URL. Note that the provided function is in Python 3 syntax.', 'parameters': {'type': 'dict', 'properties': {'url': {'type': 'string', 'description': 'Get tickers for any stock company, ETF, mutual fund, crypto and more', 'default': 'https://yahoo-finance15.p.rapidapi.com/api/v1/markets/search'}, 'headers': {'properties': {'X-RapidAPI-Key': {'type': 'string', 'description': 'The API key for authenticating requests to RapidAPI.'}, 'X-RapidAPI-Host': {'type': 'string', 'description': 'The host domain for the RapidAPI service being accessed.'}}, 'type': 'dict', 'required': ['X-RapidAPI-Key', 'X-RapidAPI-Host']}, 'timeout': {'type': 'integer', 'description': 'How many seconds to wait for the server to send data before giving up.'}, 'params': {'properties': {'search': {'type': 'string', 'description': 'Search query for stock name'}}, 'type': 'dict', 'required': []}, 'allow_redirects': {'type': 'boolean', 'description': 'A Boolean to enable/disable redirection.', 'default': True}, 'auth': {'type': 'tuple', 'description': 'A tuple to enable a certain HTTP authentication.', 'default': 'None', 'items': {'type': 'string'}}, 'cert': {'type': 'string', 'description': 'A String or Tuple specifying a cert file or key.', 'default': 'None'}, 'cookies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of cookies to send with the request.'}, 'proxies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of the protocol to the proxy url.'}, 'stream': {'type': 'boolean', 'description': 'A Boolean indication if the response should be immediately downloaded (False) or streamed (True).', 'default': False}, 'verify': {'type': 'string', 'description': 'A Boolean or a String indication to verify the servers TLS certificate or not.', 'default': True}}, 'required': ['url']}}]\n```", "input_token_count": 816, "output_token_count": 545, "latency": 13.81650686264038}
{"id": "rest_29", "result": "```json\n[requests.get({'url': 'http://ip-api.com/json?fields=query,status,country&lang=fr', 'params': {'lang': 'fr'}})\n```", "input_token_count": 818, "output_token_count": 47, "latency": 1.5057659149169922}
{"id": "rest_30", "result": "```json\n[requests.get({'url': 'http://ip-api.com/json?fields=country,countryCode,region,regionName,city,zip,lat,lon,timezone,isp,org,as,query&lang=fr'}, {'timeout': 10}), {'url': 'http://ip-api.com/json?fields=country,countryCode,region,regionName,city,zip,lat,lon,timezone,isp,org,as,query&lang=fr'}, {'timeout': 10})]\n```", "input_token_count": 797, "output_token_count": 119, "latency": 4.080682754516602}
{"id": "rest_31", "result": "```json\n[requests.get('http://ip-api.com/json?fields=country,city,timezone&lang=fr', params={'url': 'http://ip-api.com/json'})]\n```", "input_token_count": 809, "output_token_count": 50, "latency": 1.550795078277588}
{"id": "rest_32", "result": "```json\n[requests.get({'url': 'http://ip-api.com/json?fields=city,country,isp&lang=es'}, {'timeout': 10}, {'headers': {'Accept': 'application/json'}}, {'params': {'fields': 'city,country,isp'}})]\n```", "input_token_count": 802, "output_token_count": 70, "latency": 2.166855573654175}
{"id": "rest_33", "result": "```json\n[requests.get('http://ip-api.com/json?fields=query,status,country&lang=de', params={'url': 'http://ip-api.com/json', 'fields': 'query,status,country', 'lang': 'de'})]\n```", "input_token_count": 817, "output_token_count": 66, "latency": 2.1330196857452393}
{"id": "rest_34", "result": "```json\n[requests.get({'url': 'http://ip-api.com/json', 'params': {'fields': 'query,country', 'lang': 'es'}})\n```", "input_token_count": 803, "output_token_count": 43, "latency": 1.4232096672058105}
{"id": "rest_35", "result": "```json\n[{'name': 'requests.get', 'description': 'Sends a GET request to the specified URL. Note that the provided function is in Python 3 syntax.', 'parameters': {'type': 'dict', 'properties': {'url': {'type': 'string', 'description': 'Geocoding API converting a human-readable address into a pair of latitude and longitude coordinates', 'default': 'https://geocode.maps.co/search'}, 'headers': {'properties': {}, 'type': 'dict', 'required': []}, 'timeout': {'type': 'integer', 'description': 'How many seconds to wait for the server to send data before giving up.'}, 'params': {'properties': {'q': {'type': 'string', 'description': 'user query string to a particular address'}, 'api_key': {'type': 'string', 'description': 'Your API key for authentication.'}, 'format': {'type': 'string', 'description': \"The desired response format. Options include 'xml', 'json', 'jsonv2', 'geojson', 'geocodejson'. Default is 'json'.\"}}, 'type': 'dict', 'required': ['q', 'api_key']}, 'allow_redirects': {'type': 'boolean', 'description': 'A Boolean to enable/disable redirection.', 'default': True}, 'auth': {'type': 'tuple', 'description': 'A tuple to enable a certain HTTP authentication.', 'default': 'None', 'items': {'type': 'string'}}, 'cert': {'type': 'string', 'description': 'A String or Tuple specifying a cert file or key.', 'default': 'None'}, 'cookies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of cookies to send with the request.'}, 'proxies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of the protocol to the proxy url.'}, 'stream': {'type': 'boolean', 'description': 'A Boolean indication if the response should be immediately downloaded (False) or streamed (True).', 'default': False}, 'verify': {'type': 'string', 'description': 'A Boolean or a String indication to verify the servers TLS certificate or not.', 'default': True}}, 'required': ['url']}}]\n```", "input_token_count": 816, "output_token_count": 498, "latency": 13.021106243133545}
{"id": "rest_36", "result": "```json\n[{'name': 'requests.get', 'description': 'Sends a GET request to the specified URL. Note that the provided function is in Python 3 syntax.', 'parameters': {'url': {'type': 'string', 'description': 'Geocoding API converting a human-readable address into a pair of latitude and longitude coordinates', 'default': 'https://geocode.maps.co/search'}, 'headers': {'properties': {}, 'type': 'dict', 'required': []}, 'timeout': {'type': 'integer', 'description': 'How many seconds to wait for the server to send data before giving up.'}, 'params': {'properties': {'q': {'type': 'string', 'description': 'user query string to a particular address'}, 'api_key': {'type': 'string', 'description': 'Your API key for authentication.'}, 'format': {'type': 'string', 'description': \"The desired response format. Options include 'xml', 'json', 'jsonv2', 'geojson', 'geocodejson'. Default is 'json'.\"}}, 'type': 'dict', 'required': ['q', 'api_key']}, 'allow_redirects': {'type': 'boolean', 'description': 'A Boolean to enable/disable redirection.', 'default': True}, 'auth': {'type': 'tuple', 'description': 'A tuple to enable a certain HTTP authentication.', 'default': 'None', 'items': {'type': 'string'}}, 'cert': {'type': 'string', 'description': 'A String or Tuple specifying a cert file or key.', 'default': 'None'}, 'cookies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of cookies to send with the request.'}, 'proxies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of the protocol to the proxy url.'}, 'stream': {'type': 'boolean', 'description': 'A Boolean indication if the response should be immediately downloaded (False) or streamed (True).', 'default': False}, 'verify': {'type': 'string', 'description': 'A Boolean or a String indication to verify the servers TLS certificate or not.', 'default': True}}, 'required': ['url']}]\n```", "input_token_count": 808, "output_token_count": 488, "latency": 12.941536903381348}
{"id": "rest_37", "result": "```json\n[{'name': 'requests.get', 'description': 'Sends a GET request to the specified URL. Note that the provided function is in Python 3 syntax.', 'parameters': {'url': 'https://geocode.maps.co/search', 'headers': {'properties': {}, 'type': 'dict', 'required': []}, 'timeout': {'type': 'integer', 'description': 'How many seconds to wait for the server to send data before giving up.'}, 'params': {'q': '1600 Amphitheatre Parkway, Mountain View, CA', 'api_key': 'YOUR-GEOCODE-API-KEY', 'format': 'json', 'type': 'dict', 'required': ['q', 'api_key']}, 'allow_redirects': {'type': 'boolean', 'description': 'A Boolean to enable/disable redirection.', 'default': True}, 'auth': {'type': 'tuple', 'description': 'A tuple to enable a certain HTTP authentication.', 'default': 'None', 'items': {'type': 'string'}}, 'cert': {'type': 'string', 'description': 'A String or Tuple specifying a cert file or key.', 'default': 'None'}, 'cookies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of cookies to send with the request.'}, 'proxies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of the protocol to the proxy url.'}, 'stream': {'type': 'boolean', 'description': 'A Boolean indication if the response should be immediately downloaded (False) or streamed (True).', 'default': False}, 'verify': {'type': 'string', 'description': 'A Boolean or a String indication to verify the servers TLS certificate or not.', 'default': True}}]\n```", "input_token_count": 813, "output_token_count": 399, "latency": 11.963533163070679}
{"id": "rest_38", "result": "```json\n[{'name': 'requests.get', 'description': 'Sends a GET request to the specified URL. Note that the provided function is in Python 3 syntax.', 'parameters': {'url': 'https://geocode.maps.co/search', 'headers': {'properties': {}, 'type': 'dict', 'required': []}, 'timeout': {'type': 'integer', 'description': 'How many seconds to wait for the server to send data before giving up.'}, 'params': {'q': '450 Jane Stanford Way Stanford, CA 94305\u20132004', 'api_key': 'YOUR-GEOCODE-API-KEY', 'format': 'json', 'type': 'dict', 'required': ['q', 'api_key']}, 'allow_redirects': {'type': 'boolean', 'description': 'A Boolean to enable/disable redirection.', 'default': True}, 'auth': {'type': 'tuple', 'description': 'A tuple to enable a certain HTTP authentication.', 'default': 'None', 'items': {'type': 'string'}}, 'cert': {'type': 'string', 'description': 'A String or Tuple specifying a cert file or key.', 'default': 'None'}, 'cookies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of cookies to send with the request.'}, 'proxies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of the protocol to the proxy url.'}, 'stream': {'type': 'boolean', 'description': 'A Boolean indication if the response should be immediately downloaded (False) or streamed (True).', 'default': False}, 'verify': {'type': 'string', 'description': 'A Boolean or a String indication to verify the servers TLS certificate or not.', 'default': True}}]\n```", "input_token_count": 821, "output_token_count": 407, "latency": 12.033393383026123}
{"id": "rest_39", "result": "```json\n[requests.get('https://geocode.maps.co/reverse?lat=37.4224764&lon=-122.0842499&api_key=YOUR-GEOCODE-API-KEY&format=geojson')]\n```", "input_token_count": 840, "output_token_count": 68, "latency": 2.2205426692962646}
{"id": "rest_40", "result": "```json\n[{'name': 'requests.get', 'description': 'Sends a GET request to the specified URL. Note that the provided function is in Python 3 syntax.', 'parameters': {'url': 'https://geocode.maps.co/reverse?lat=63.65687&lon=117.05229&api_key=YOUR-GEOCODE-API-KEY&format=json', 'headers': {'properties': {}, 'type': 'dict', 'required': []}, 'timeout': {'type': 'integer', 'description': 'How many seconds to wait for the server to send data before giving up.'}, 'params': {'properties': {'lat': {'type': 'float', 'description': 'Latitude of the location to reverse geocode.'}, 'lon': {'type': 'float', 'description': 'Longitude of the location to reverse geocode.'}, 'api_key': {'type': 'string', 'description': 'Your API key for authentication.'}, 'format': {'type': 'string', 'description': \"The desired response format. Options include 'xml', 'json', 'jsonv2', 'geojson', 'geocodejson'. Default is 'json'.\"}}, 'type': 'dict', 'required': ['lat', 'lon', 'api_key']}, 'allow_redirects': {'type': 'boolean', 'description': 'A Boolean to enable/disable redirection.', 'default': True}, 'auth': {'type': 'tuple', 'description': 'A tuple to enable a certain HTTP authentication.', 'default': 'None', 'items': {'type': 'string'}}, 'cert': {'type': 'string', 'description': 'A String or Tuple specifying a cert file or key.', 'default': 'None'}, 'cookies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of cookies to send with the request.'}, 'proxies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of the protocol to the proxy url.'}, 'stream': {'type': 'boolean', 'description': 'A Boolean indication if the response should be immediately downloaded (False) or streamed (True).', 'default': False}, 'verify': {'type': 'string', 'description': 'A Boolean or a String indication to verify the servers TLS certificate or not.', 'default': True}}, 'required': ['url']}]\n```", "input_token_count": 839, "output_token_count": 526, "latency": 13.25448226928711}
{"id": "rest_41", "result": "```json\n[{'name': 'requests.get', 'params': {'url': 'https://geocode.maps.co/search', 'params': {'q': 'Soda Hall, Berkeley, CA', 'api_key': 'YOUR-GEOCODE-API-KEY', 'format': 'geojson'}}}]\n```", "input_token_count": 792, "output_token_count": 71, "latency": 2.344839572906494}
{"id": "rest_42", "result": "```json\n[{'name': 'requests.get', 'params': {'url': 'https://geocode.maps.co/reverse', 'params': {'lat': 39.4224764, 'lon': -112.0842499, 'api_key': 'YOUR-GEOCODE-API-KEY', 'format': 'geojson'}}}]\n```", "input_token_count": 834, "output_token_count": 91, "latency": 3.062793254852295}
{"id": "rest_43", "result": "```json\n[{'name': 'requests.get', 'params': {'url': 'https://geocode.maps.co/reverse?lat=40.748817&lon=-73.985428&api_key=YOUR-GEOCODE-API-KEY&format=geojson'}}]\n```", "input_token_count": 834, "output_token_count": 77, "latency": 2.6097755432128906}
{"id": "rest_44", "result": "```json\n[requests.get('https://geocode.maps.co/reverse?lat=48.8584&lon=2.2945&api_key=YOUR-GEOCODE-API-KEY&format=json', headers={'Accept': 'application/json'}),]\n```", "input_token_count": 839, "output_token_count": 69, "latency": 2.422025680541992}
{"id": "rest_45", "result": "```tool_code\n[requests.get('https://api.open-meteo.com/v1/forecast?latitude=35.6895&longitude=139.6917&temperature_unit=fahrenheit&forecast_days=7&models=best&cell_selection=nearest', params={'past_days': 0, 'forecast_hours': 24, 'forecast_minutely_15': 15, 'start_date': '2023-08-26', 'end_date': '2023-08-32', 'timezone': 'GMT'})]\n```", "input_token_count": 2502, "output_token_count": 146, "latency": 5.077934980392456}
{"id": "rest_46", "result": "```tool_code\n[requests.get('https://api.open-meteo.com/v1/forecast', params={'latitude': '35.68', 'longitude': '-121.34', 'hourly': 'temperature_2m_max,relative_humidity_2m,dew_point_2m,apparent_temperature,pressure_msl,cloud_cover,cloud_cover_low,cloud_cover_mid,cloud_cover_high,wind_speed_10m,wind_speed_80m,wind_speed_120m,wind_speed_180m,wind_direction_10m,wind_direction_80m,wind_direction_120m,wind_direction_180m,wind_gusts_10m,shortwave_radiation,direct_radiation,direct_normal_irradiance,diffuse_radiation,global_tilted_irradiance,vapour_pressure_deficit,cape,evapotranspiration,et0_fao_evapotranspiration,precipitation,snowfall,precipitation_probability,rain,showers,weather_code,snow_depth,freezing_level_height,visibility,soil_temperature_0cm,soil_temperature_6cm,soil_temperature_18cm,soil_temperature_54cm,soil_moisture_0_to_1cm,soil_moisture_1_to_3cm,soil_moisture_3_to_9cm,soil_moisture_9_to_27cm,soil_moisture_27_to_81cm', 'temperature_unit': 'fahrenheit', 'precipitation_unit': 'inches', 'timezone': 'GMT', 'past_days': 0, 'forecast_days': 10, 'forecast_hours': 1, 'past_hours': 0, 'past_minutely_15': 0, 'start_date': '2023-07-01', 'end_date': '2023-07-10', 'models': 'best', 'cell_selection': 'nearest', 'apikey': 'None', 'allow_redirects': True, 'auth': 'None', 'cert': 'None', 'cookies': 'None', 'proxies': 'None', 'stream': False, 'verify': True})\n```", "input_token_count": 2493, "output_token_count": 520, "latency": 13.06195855140686}
{"id": "rest_47", "result": "```tool_code\n[requests.get('https://api.open-meteo.com/v1/forecast?latitude=35.6895&longitude=139.6917&hourly=temperature_2m_max,wind_speed_10m,precipitation_probability&temperature_unit=celsius&wind_speed_unit=kmh&precipitation_unit=mm&forecast_days=7')]\n```", "input_token_count": 2502, "output_token_count": 102, "latency": 3.736001968383789}
{"id": "rest_48", "result": "```tool_code\n[requests.get('https://api.open-meteo.com/v1/forecast?latitude=47.8095&longitude=13.0550&temperature_unit=fahrenheit&wind_speed_unit=mph&timezone=Europe/Vienna&past_days=0&forecast_days=7&forecast_hours=12&forecast_minutely_15=1&past_hours=0&past_minutely_15=0&start_date=2023-07-10&end_date=2023-07-17')]\n```", "input_token_count": 2512, "output_token_count": 146, "latency": 5.046209335327148}
{"id": "rest_49", "result": "```tool_code\n[requests.get(\n    'https://api.open-meteo.com/v1/forecast',\n    params={'latitude': '39.113014', 'longitude': '-105.358887', 'temperature_unit': 'fahrenheit', 'wind_speed_unit': 'mph', 'precipitation_unit': 'mm', 'timeformat': 'iso8601', 'timezone': 'America/Denver', 'forecast_days': 10}\n)]\n```", "input_token_count": 2499, "output_token_count": 123, "latency": 4.4636383056640625}
{"id": "rest_50", "result": "```tool_code\n[requests.get('https://api.open-meteo.com/v1/forecast', params={'latitude': '37.8651', 'longitude': '119.5383', 'temperature_unit': 'fahrenheit', 'wind_speed_unit': 'mph', 'precipitation_unit': 'inches', 'timeformat': 'iso8601', 'timezone': 'America/Los_Angeles', 'forecast_days': 10, 'hourly': True}]\n```", "input_token_count": 2529, "output_token_count": 120, "latency": 4.34764838218689}
{"id": "rest_51", "result": "```tool_code\n[requests.get('https://api.open-meteo.com/v1/forecast', params={'latitude': '46.0207', 'longitude': '7.7491', 'temperature_unit': 'fahrenheit', 'wind_speed_unit': 'mph', 'precipitation_unit': 'inches', 'timeformat': 'iso8601', 'timezone': 'GMT', 'start_date': '2023-04-15', 'end_date': '2023-04-21', 'past_days': 0, 'forecast_days': 7, 'forecast_hours': 24, 'past_hours': 0, 'past_minutely_15': 0, 'start_hour': '2023-04-15T00:00', 'end_hour': '2023-04-21T23:59', 'models': 'best', 'cell_selection': 'nearest'}]\n```", "input_token_count": 2541, "output_token_count": 239, "latency": 7.158151626586914}
{"id": "rest_52", "result": "```tool_code\n[requests.get('https://api.open-meteo.com/v1/forecast?latitude=46.2028&longitude=-121.4905&elevation=3743&hourly=temperature_2m_max&hourly=temperature_2m_min&daily=temperature_2m_max&daily=temperature_2m_min&past_days=1&forecast_days=10&timezone=GMT')]\n```", "input_token_count": 2510, "output_token_count": 111, "latency": 4.162924766540527}
{"id": "rest_53", "result": "```tool_code\n[requests.get('https://mashape-community-urban-dictionary.p.rapidapi.com/define?term=yeet', headers={'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY'}, params={'term': 'yeet'}, timeout=10)]\n```", "input_token_count": 814, "output_token_count": 71, "latency": 2.698437213897705}
{"id": "rest_54", "result": "```python\n[requests.get('https://mashape-community-urban-dictionary.p.rapidapi.com/define?term=artwash', headers={'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY'}, timeout=10, params={'term': 'artwash'}, allow_redirects=True)]\n```", "input_token_count": 796, "output_token_count": 75, "latency": 2.5180933475494385}
{"id": "rest_55", "result": "```json\n[requests.get('https://mashape-community-urban-dictionary.p.rapidapi.com/define?term=lit', headers={'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'mashape-community-urban-dictionary.p.rapidapi.com'}, params={'term': 'lit'}, timeout=10),]\n```", "input_token_count": 806, "output_token_count": 93, "latency": 3.3756935596466064}
{"id": "rest_56", "result": "```json\n[{'name': 'requests.get', 'description': 'Sends a GET request to the specified URL. Note that the provided function is in Python 3 syntax.', 'parameters': {'type': 'dict', 'properties': {'url': {'type': 'string', 'description': 'Urban Dictionary is the dictionary you write.', 'default': 'https://mashape-community-urban-dictionary.p.rapidapi.com/define'}, 'headers': {'properties': {'X-RapidAPI-Key': {'type': 'string', 'description': 'The API key for authenticating requests to RapidAPI.'}, 'X-RapidAPI-Host': {'type': 'string', 'description': 'The host domain for the RapidAPI service being accessed.'}}, 'type': 'dict', 'required': ['X-RapidAPI-Key', 'X-RapidAPI-Host']}, 'timeout': {'type': 'integer', 'description': 'How many seconds to wait for the server to send data before giving up.'}, 'params': {'properties': {'term': {'type': 'string', 'description': 'The search term or query parameter required by the API.'}}, 'type': 'dict', 'required': ['term']}, 'allow_redirects': {'type': 'boolean', 'description': 'A Boolean to enable/disable redirection.', 'default': True}, 'auth': {'type': 'tuple', 'description': 'A tuple to enable a certain HTTP authentication.', 'default': 'None', 'items': {'type': 'string'}}, 'cert': {'type': 'string', 'description': 'A String or Tuple specifying a cert file or key.', 'default': 'None'}, 'cookies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of cookies to send with the request.'}, 'proxies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of the protocol to the proxy url.'}, 'stream': {'type': 'boolean', 'description': 'A Boolean indication if the response should be immediately downloaded (False) or streamed (True).', 'default': False}, 'verify': {'type': 'string', 'description': 'A Boolean or a String indication to verify the servers TLS certificate or not.', 'default': True}}, 'required': ['url']}}]\n```", "input_token_count": 803, "output_token_count": 504, "latency": 12.70793604850769}
{"id": "rest_57", "result": "```json\n[requests.get('https://mashape-community-urban-dictionary.p.rapidapi.com/define?term=swole', headers={'X-RapidAPI-Key': 'YOUR-RAPID-API-KEY', 'X-RapidAPI-Host': 'mashape-community-urban-dictionary.p.rapidapi.com'}, params={'term': 'swole'}, timeout=10, allow_redirects=True)]\n```", "input_token_count": 815, "output_token_count": 100, "latency": 3.640695333480835}
{"id": "rest_58", "result": "```json\n[requests.get('http://www.omdbapi.com/?i=tt1791570&t=Barbie&y=2023&plot=short&apikey=YOUR-OMDB-API-KEY')]\n```", "input_token_count": 912, "output_token_count": 59, "latency": 2.059138059616089}
{"id": "rest_59", "result": "```json\n[requests.get('http://www.omdbapi.com/?i=1278962&t=The+Social+Network&y=2010&plot=short&r=json&apikey=YOUR-OMDB-API-KEY')]\n```", "input_token_count": 919, "output_token_count": 66, "latency": 2.5305025577545166}
{"id": "rest_60", "result": "```json\n[requests.get('http://www.omdbapi.com/?i=tt1285016&plot=full&apikey=YOUR-OMDB-API-KEY', params={'type': 'movie'})]\n```", "input_token_count": 921, "output_token_count": 56, "latency": 2.0085723400115967}
{"id": "rest_61", "result": "```json\n[requests.get('http://www.omdbapi.com/?i=tt0841847&t=Inception&plot=full&apikey=YOUR-OMDB-API-KEY&r=json', params={'type': 'movie'})]\n```", "input_token_count": 911, "output_token_count": 65, "latency": 2.3441567420959473}
{"id": "rest_62", "result": "```python\n[requests.get('http://www.omdbapi.com/?i=tt0121344&t=Gorilla&plot=full&apikey=YOUR-OMDB-API-KEY&r=json', headers={'Accept': 'application/json'}, timeout=10)]\n```", "input_token_count": 923, "output_token_count": 70, "latency": 2.4182307720184326}
{"id": "rest_63", "result": "```tool_code\n[requests.get('http://www.omdbapi.com/?i=tt1285016&t=Oppenheimer&plot=full&apikey=YOUR-OMDB-API-KEY', headers={'Accept': 'application/json'}, timeout=10),]\n```", "input_token_count": 920, "output_token_count": 71, "latency": 2.5325145721435547}
{"id": "rest_64", "result": "```json\n[requests.get('https://www.omdbapi.com/?i=tt0360541&apikey=YOUR-OMDB-API-KEY&plot=full&r=json', params={'type': 'movie'})]\n```", "input_token_count": 966, "output_token_count": 60, "latency": 2.089864492416382}
{"id": "rest_65", "result": "[requests.get('https://date.nager.at/api/v3/LongWeekend/2023/CA')] \n", "input_token_count": 687, "output_token_count": 33, "latency": 1.1228065490722656}
{"id": "rest_66", "result": "```json\n[{'name': 'requests.get', 'description': 'Sends a GET request to the specified URL. Note that the provided function is in Python 3 syntax.', 'parameters': {'type': 'dict', 'properties': {'url': {'type': 'string', 'description': 'The api provides a simple way to query the holidays of over 100 countries, also it is possible to query long weekends. countryCode is ISO 3166-1 alpha-2', 'default': 'https://date.nager.at/api/v3/LongWeekend/{year}/{countryCode}'}, 'headers': {'properties': {}, 'type': 'dict', 'required': []}, 'timeout': {'type': 'integer', 'description': 'How many seconds to wait for the server to send data before giving up.'}, 'params': {'properties': {}, 'type': 'dict', 'required': []}, 'auth': {'type': 'tuple', 'description': 'A tuple to enable a certain HTTP authentication.', 'default': 'None', 'items': {'type': 'string'}}, 'cert': {'type': 'string', 'description': 'A String or Tuple specifying a cert file or key.', 'default': 'None'}, 'cookies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of cookies to send with the request.'}, 'proxies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of the protocol to the proxy url.'}, 'stream': {'type': 'boolean', 'description': 'A Boolean indication if the response should be immediately downloaded (False) or streamed (True).', 'default': False}, 'verify': {'type': 'string', 'description': 'A Boolean or a String indication to verify the servers TLS certificate or not.', 'default': True}}, 'required': ['url']}]\n```", "input_token_count": 723, "output_token_count": 411, "latency": 11.522500991821289}
{"id": "rest_67", "result": "```json\n[{'name': 'requests.get', 'description': 'Sends a GET request to the specified URL. Note that the provided function is in Python 3 syntax.', 'parameters': {'type': 'dict', 'properties': {'url': {'type': 'string', 'description': 'The api provides a simple way to query the holidays of over 100 countries, also it is possible to query long weekends. countryCode is ISO 3166-1 alpha-2', 'default': 'https://date.nager.at/api/v3/LongWeekend/{year}/{countryCode}'}, 'headers': {'properties': {}, 'type': 'dict', 'required': []}, 'timeout': {'type': 'integer', 'description': 'How many seconds to wait for the server to send data before giving up.'}, 'params': {'properties': {}, 'type': 'dict', 'required': []}, 'auth': {'type': 'tuple', 'description': 'A tuple to enable a certain HTTP authentication.', 'default': 'None', 'items': {'type': 'string'}}, 'cert': {'type': 'string', 'description': 'A String or Tuple specifying a cert file or key.', 'default': 'None'}, 'cookies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of cookies to send with the request.'}, 'proxies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of the protocol to the proxy url.'}, 'stream': {'type': 'boolean', 'description': 'A Boolean indication if the response should be immediately downloaded (False) or streamed (True).', 'default': False}, 'verify': {'type': 'string', 'description': 'A Boolean or a String indication to verify the servers TLS certificate or not.', 'default': True}}, 'required': ['url']}]\n```\n```python\nrequests.get('https://date.nager.at/api/v3/LongWeekend/2023/FR')\n```", "input_token_count": 703, "output_token_count": 445, "latency": 11.831507921218872}
{"id": "rest_68", "result": "```json\n[{'name': 'requests.get', 'description': 'Sends a GET request to the specified URL. Note that the provided function is in Python 3 syntax.', 'parameters': {'type': 'dict', 'properties': {'url': {'type': 'string', 'description': 'The api provides a simple way to query the holidays of over 100 countries, also it is possible to query long weekends. countryCode is ISO 3166-1 alpha-2', 'default': 'https://date.nager.at/api/v3/LongWeekend/{year}/{countryCode}'}, 'headers': {'properties': {}, 'type': 'dict', 'required': []}, 'timeout': {'type': 'integer', 'description': 'How many seconds to wait for the server to send data before giving up.'}, 'params': {'properties': {}, 'type': 'dict', 'required': []}, 'auth': {'type': 'tuple', 'description': 'A tuple to enable a certain HTTP authentication.', 'default': 'None', 'items': {'type': 'string'}}, 'cert': {'type': 'string', 'description': 'A String or Tuple specifying a cert file or key.', 'default': 'None'}, 'cookies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of cookies to send with the request.'}, 'proxies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of the protocol to the proxy url.'}, 'stream': {'type': 'boolean', 'description': 'A Boolean indication if the response should be immediately downloaded (False) or streamed (True).', 'default': False}, 'verify': {'type': 'string', 'description': 'A Boolean or a String indication to verify the servers TLS certificate or not.', 'default': True}}, 'required': ['url']}]\n```", "input_token_count": 698, "output_token_count": 411, "latency": 11.51638412475586}
{"id": "rest_69", "result": "```json\n[{'name': 'requests.get', 'description': 'Sends a GET request to the specified URL. Note that the provided function is in Python 3 syntax.', 'parameters': {'type': 'dict', 'properties': {'url': {'type': 'string', 'description': 'The api provides a simple way to query the holidays of over 100 countries, also it is possible to query long weekends. countryCode is ISO 3166-1 alpha-2', 'default': 'https://date.nager.at/api/v3/LongWeekend/{year}/{countryCode}'}, 'headers': {'properties': {}, 'type': 'dict', 'required': []}, 'timeout': {'type': 'integer', 'description': 'How many seconds to wait for the server to send data before giving up.'}, 'params': {'properties': {'year': '2023', 'countryCode': 'CA'}, 'type': 'dict', 'required': ['year', 'countryCode']}, 'auth': {'type': 'tuple', 'description': 'A tuple to enable a certain HTTP authentication.', 'default': 'None', 'items': {'type': 'string'}}, 'cert': {'type': 'string', 'description': 'A String or Tuple specifying a cert file or key.', 'default': 'None'}, 'cookies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of cookies to send with the request.'}, 'proxies': {'type': 'dict', 'additionalProperties': {'type': 'string'}, 'description': 'Dictionary of the protocol to the proxy url.'}, 'stream': {'type': 'boolean', 'description': 'A Boolean indication if the response should be immediately downloaded (False) or streamed (True).', 'default': False}, 'verify': {'type': 'string', 'description': 'A Boolean or a String indication to verify the servers TLS certificate or not.', 'default': True}}, 'required': ['url']}]\n```", "input_token_count": 717, "output_token_count": 430, "latency": 11.6225106716156}
